
<h3></h3> |
| Can you promote from one environment to another in one click or less?
Can you rebuild an environment without manual intervention?
Can you commission a new environment (-hardware) in under an hour|
| There's a good intro to serverspec (rspec support for docker). I'm in two minds as to whether it is needed though.

The way I see it, if you're declaratively specifying what the system should look like with Puppet or Powershell DSC, then the system should be able to detect / test for configuration 'drift' meaning there's no need for things like serverspec.

https://robots.thoughtbot.com/tdd-your-dockerfiles-with-rspec-and-serverspec|
| Cyber dojo is a great example of some of the things that are now possible with Docker.

Check out Jon Jagger's http://cyber-dojo.org/
|
| Cyber dojo is a great example of some of the things that are now possible with Docker.

Check out Jon Jagger's http://cyber-dojo.org/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |
| <blockquote>I'm a coder and know little about anatomy, but,</blockquote>
If you're thinking of a career in development then you'll be wondering which programming language is going to keep you entertained and in gainful employment.

<span style="font-size: 16px; line-height: 1.5;">While a good programming language is nice,  looking after your back is going to keep you in the industry for the long-term. </span>

I've  seen patches where 80 percent of team members have back or neck problems.
<h3>Spec</h3>
It doesn't have to be this way. The muscles (E.g. the <a title="Back muscles" href="https://en.wikipedia.org/wiki/Longissimus" target="_blank">longissimus</a>) that run up and down either side of your spine should be larger than your spine protecting it. Without these muscles being well developed there's little aside from your spine protecting and supporting your spine.

Your posture also needs to be unlike a hedgehog:

<a href="http://gilescope.ninja/wp-content/uploads/2015/04/Small_hedgehog.jpg"><img class="alignnone size-thumbnail wp-image-61" src="http://gilescope.ninja/wp-content/uploads/2015/04/Small_hedgehog-150x150.jpg" alt="Curled hedgehog" width="150" height="150" /></a>
<h3>Why</h3>
How  you achieve this is up to you. - Getting educated and understanding why it's so good for you now and in the future - think of it as an investment in your pension.
<h3>Implementation</h3>
&nbsp;

Take regular breaks with tea or some other addiction is one part.

The other is to have fun while doing some back strengthening. |
||
| Mocking has its place, but many use it everywhere.

It's really useful if you're trying to hide a third party service that you can't substitute any other way.

But if the code is all your own and you are injecting in many mocks you find yourself or anyone else being able to understand the intent of the test 6 months on.

By setting up expectations we reach into the behaviour / implementation of what we're testing to such an extent that any change to the implementation is likely to break the test.
<h3>Mindset</h3>
This high coupling between the tests and the implementations keeps our minds thinking about the implementation.

When we're writing specs, we should be thinking about what we want rather than how to get it.

The best way to understand this mindset is to try it for yourself. Go to the extreme of having the spec in a language separate to the implementation.

Enter the <a title="Gherkin language" href="https://github.com/cucumber/cucumber/wiki/Gherkin">Gherkin</a> language...

By specifying what you want away from the implementation details it puts your head in the right place.
<h3>Taking the mindset on the road</h3>
By using things like <a title="SpecFlow" href="http://www.specflow.org/">SpecFlow</a> you can use Gherkin to specify your tests, but once you've got the idea of the importance of the separation of the spec from the implementation, we can go back and see how we'd structure our tests differently.

In the large I'd argue for having the tests only talking to an exposed API, and that the design of that API is to make testing as easy as possible. I.e. behind that API we hide the test implementation details and we expose a high level 'DSL' that allows our app to be tested.

Test                      =&gt; (Testing)API       =&gt; Implementation
(what to test)        (how we test)              (how we implement)

This reduces the tight coupling one gets between tests and implementations, and makes it easier when looking at the tests to specify what you want, rather than how.

&nbsp; |
| Mocking has its place, but many use it everywhere.

It's really useful if you're trying to hide a third party service that you can't substitute any other way.

But if the code is all your own and you are injecting in many mocks you find yourself or anyone else being able to understand the intent of the test 6 months on.

By setting up expectations we reach into the behaviour / implementation of what we're testing to such an extent that any change to the implementation is likely to break the test.
<h3>Mindset</h3>
This high coupling between the tests and the implementations keeps our minds thinking about the implementation.

When we're writing specs, we should be thinking about what we want rather than how to get it.

The best way to understand this mindset is to try it for yourself. Go to the extreme of having the spec in a language separate to the implementation.

Enter the <a title="Gherkin language" href="https://github.com/cucumber/cucumber/wiki/Gherkin">Gherkin</a> language...

By specifying what you want away from the implementation details it puts your head in the right place.
<h3>Taking the mindset on the road</h3>
By using things like <a title="SpecFlow" href="http://www.specflow.org/">SpecFlow</a> you can use Gherkin to specify your tests, but once you've got the idea of the importance of the separation of the spec from the implementation, we can go back and see how we'd structure our tests differently.

In the large I'd argue for having the tests only talking to an exposed API, and that the design of that API is to make testing as easy as possible. I.e. behind that API we hide the test implementation details and we expose a high level 'DSL' that allows our app to be tested.

By separating out our concerns, we have two distinct layers of a test:

Spec/Test                      =&gt; (Testing)API       =&gt; Implementation
(what to test)               (how we test)              (how we implement)

This reduces the tight coupling one gets between tests and implementations, and makes it easier when looking at the tests to specify what you want, rather than how.

&nbsp|
| Anti-pattern:
IMyInterface x = y as IMyInterface
And then the test code goes on to assume x is not null...

An explicit cast would be better as your stating your expectations more clearly:
IMyInterface x = (IMyInterface) y

And another:

Assert.NotNull(x);
Assert.True(x.Y)

Just skip to:
Assert.True(x.Y)

If there's a null pointer it's not going to take a genius to figure out where it is|
| If you're thinking of a career in development then you'll be wondering which programming language is going to keep you entertained and in gainful employment.

<span style="font-size: 16px; line-height: 1.5;">While a good programming language is nice,  looking after your back is going to keep you in the industry for the long-term. </span>

I've  seen patches where 80 percent of team members have back or neck problems.

Spec

It doesn't have to be this way. The muscles that run up and down either side of your spine should be larger than your spine protecting it.

Your posture also needs to be unlike a hedgehog.

Implementation

how  you achieve this is up to you.

Takeregular breaks with tea or some other addiction is one part.

The other is to have fun while doing some back strengthening.                                                                                                                                                                                                                 |
|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
| <blockquote>I'm a coder and know little about anatomy, but,</blockquote>
If you're thinking of a career in development then you'll be wondering which programming language is going to keep you entertained and in gainful employment.

<span style="font-size: 16px; line-height: 1.5;">While a good programming language is nice,  looking after your back is going to keep you in the industry for the long-term. </span>

I've  seen patches where 80 percent of team members have back or neck problems.
<h3>Spec</h3>
It doesn't have to be this way. The muscles (E.g. the <a title="Back muscles" href="https://en.wikipedia.org/wiki/Longissimus" target="_blank">longissimus</a>) that run up and down either side of your spine should be larger than your spine protecting it. Without these muscles being well developed there's little aside from your spine protecting and supporting your spine.

Your posture also needs to be unlike a hedgehog:

<a href="http://gilescope.ninja/wp-content/uploads/2015/04/Small_hedgehog.jpg"><img class="alignnone size-thumbnail wp-image-61" src="http://gilescope.ninja/wp-content/uploads/2015/04/Small_hedgehog-150x150.jpg" alt="Curled hedgehog" width="150" height="150" /></a>
<h3>Why</h3>
How  you achieve this is up to you. - Getting educated and understanding why it's so good for you now and in the future - think of it as an investment in your pension.
<h3>Implementation</h3>
&nbsp;

Take regular breaks with tea or some other addiction is one part.

The other is to have fun while doing some back strengthening. |
||
| Akka has just won an award as one of the most innovative tech out there. That's quite an achievement on a 1970s idea. Learn why actors are all the rage - it's because they keep it simple.
| <pre><code>When starting Mac OS X:
</code></pre>

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

&nbsp;
     [category-d3tree layout="force"] |
| When you start a new machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

&nbsp;

&nbsp|
||
| Programming in the small

Keep focus going -&nbsp; when you leave for the day, make sure the code is broken / have a failing test. It will get you started faster in the morning. 
Just type in a message in the middle of the code to make it not compile to remind you.

Don't check in just before going home. That would just be foolhardy|
| Programming in the small

Keep focus going -&nbsp; when you leave for the day, make sure the code is broken / have a failing test. It will get you started faster in the morning. 
Just type in a message in the middle of the code to make it not compile to remind you.

Don't check in just before going home. That would just be foolhardy|
||
||
||
|                                                                                                                                                                                                                                                                                                              |
| Svn ignore 1.8:

svn:global-ignores

bin
obj
Git ignore

&nbsp;

&nbsp|
| Svn ignore 1.8 hierarchy 
Git ignore|
| To branch or not to branch - it's not even a question.

Not branching prevents you taking risks, but branching isn't free so there's a tradeoff.

<table>
<tbody>
<tr>
<td>Strategy</td>
<td>What is it?</td>
<td>Advantages</td>
<td>Disadvantages</td>
</tr>
<tr>
<td>Branch by abstraction

(aka feature flags)</td>
<td>Have configuration turning your branch on and off dynamically at runtime.</td>
<td>
<ul>
    <li>No merging</li>
</ul>
</td>
<td></td>
</tr>
<tr>
<td>Feature Branches</td>
<td> A branch for a specific story/feature, reintegrated into trunk when it's 'done'.</td>
<td>
<ul>
    <li>Team is isolated from the firehose.</li>
</ul>
</td>
<td>
<ul>
    <li>More costly than branching by abstraction due to merge overhead.</li>
</ul>
</td>
</tr>
<tr>
<td>Merge Only Release Branch</td>
<td>No checkins to release branches are allowed. Everything change on a release branch must be merged in.</td>
<td>
<ul>
    <li></li>
    <li>No way to regress changes as everything is applied to the trunk branch before it gets into prod,</li>
</ul>
</td>
<td></td>
</tr>
</tbody>
</table>

&nbsp;

http://nvie.com/posts/a-successful-git-branching-model/ |
| To branch or not to branch - it's not even a question.

Not branching prevents you taking risks, but branching isn't free so there's a tradeoff.

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td>&nbsp;</td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

&nbsp;

<pre><code>    &lt;h3 class="widget-title"&gt;&lt;/h3&gt;
    &lt;a href="#" class="sow-carousel-next" title="Next"&gt;&lt;/a&gt;
    &lt;a href="#" class="sow-carousel-previous" title="Previous"&gt;&lt;/a&gt;




    &lt;a href="#" class="sow-carousel-previous" title="Previous"&gt;&lt;/a&gt;

    &lt;a href="#" class="sow-carousel-next" title="Next"&gt;&lt;/a&gt;


        &lt;ul class="sow-carousel-items"&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/cache-by-hash/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/04/Royal_key.png)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/cache-by-hash/"&gt;Cache by Hash&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/pedal-zurich/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/05/blindspot.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/pedal-zurich/"&gt;Pedal Zurich&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/large-testbases/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/09/Green.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/large-testbases/"&gt;Large testbases&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/laptops/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/07/maclaptop.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/laptops/"&gt;Laptops&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/docker-and-coreos-friends-again/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/06/All-you-need-is-love.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/docker-and-coreos-friends-again/"&gt;Docker and CoreOS Friends again!&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/ejs/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/04/javascript.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/ejs/"&gt;Why Enterprise JavaScript is inevitable…&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/log4nets-considered-harmful/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/06/SunsetOnLog4Net.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/log4nets-considered-harmful/"&gt;Log4Net Considered Harmful&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/deployment/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/06/WindowsDEPLOYMENT.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/deployment/"&gt;Deployment&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/measuring-quality/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/05/Quality-Guaranteed.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/measuring-quality/"&gt;Measuring Quality&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                                &lt;li class="sow-carousel-item"&gt;

                                                        &lt;a href="http://gilescope.ninja/continuous-code-reviews/" style="background-image: url(http://gilescope.ninja/wp-content/uploads/2015/05/Review.jpg)"&gt;
                                &lt;span class="overlay"&gt;&lt;/span&gt;
                            &lt;/a&gt;

                    &lt;h3&gt;&lt;a href="http://gilescope.ninja/continuous-code-reviews/"&gt;Continuous Code Reviews&lt;/a&gt;&lt;/h3&gt;
                &lt;/li&gt;
                        &lt;/ul&gt;
</code></pre> |
| When you start a new machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

&nbsp;

&nbsp;

<h2>Libraries to consider</h2>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |
||
| Svn ignore 1.8:

svn:global-ignores

bin
obj
Git ignore

&nbsp;

&nbsp;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |
| Let me count the ways|
| New inexpensive centimeter-accurate GPS system could transform mainstream applications <a href="http://nextbigfuture.com/2015/05/new-inexpensive-centimeter-accurate-gps.html">http://nextbigfuture.com/2015/05/new-inexpensive-centimeter-accurate-gps.html</a>

| <a href="http://blogs.windows.com/msedgedev/2015/05/07/bringing-asm-js-to-chakra-microsoft-edge/">http://blogs.windows.com/msedgedev/2015/05/07/bringing-asm-js-to-chakra-microsoft-edge/</a|
| <a href="http://blogs.windows.com/msedgedev/2015/05/07/bringing-asm-js-to-chakra-microsoft-edge/">http://blogs.windows.com/msedgedev/2015/05/07/bringing-asm-js-to-chakra-microsoft-edge/</a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |
| <a href="https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS">https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS</a|
| <a href="https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS">https://github.com/jashkenas/coffeescript/wiki/List-of-languages-that-compile-to-JS</a|
| <a href="http://m.slashdot.org/story/275759">http://m.slashdot.org/story/275759</a|
| <a href="http://m.slashdot.org/story/275759">http://m.slashdot.org/story/275759</a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
| Ever since reading <a href="http://en.wikipedia.org/wiki/Mars_trilogy" target="_blank">Red Mars</a> by Kim Stanley Robinson I have been fascinated by the elegance of a space elevator. But to do so you'd need really strong cables.

It looks like we are now a step closer...

<a href="http://thestack.com/emiliano-lepore-spider-ragno-graphene-carbon-070515">http://thestack.com/emiliano-lepore-spider-ragno-graphene-carbon-070515</a|
| Wall Street is using Bitcoin, not just the blockchain. • Coin Center <a href="https://coincenter.org/2015/05/wall-street-is-using-bitcoin-not-just-the-blockchain/">https://coincenter.org/2015/05/wall-street-is-using-bitcoin-not-just-the-blockchain/</a|
| Does TDD really lead to good design? <a href="http://codurance.com/2015/05/12/does-tdd-lead-to-good-design/">http://codurance.com/2015/05/12/does-tdd-lead-to-good-design/</a|
| In-database R coming to SQL Server 2016 <a href="http://www.r-bloggers.com/in-database-r-coming-to-sql-server-2016/">http://www.r-bloggers.com/in-database-r-coming-to-sql-server-2016/</a>
| http://www.theregister.co.uk/2015/05/15/wrestling_with_microsoft_nano_server_preview/?page|
| http://www.theregister.co.uk/2015/05/15/wrestling_with_microsoft_nano_server_preview/?page|
| Postgres finally has CUBE / ROLLUP / GROUPING SETS <a href="http://www.thatguyfromdelhi.com/2015/05/postgres-finally-has-cube-rollup.html">http://www.thatguyfromdelhi.com/2015/05/postgres-finally-has-cube-rollup.html</a|
| Add Related Posts to WordPress with Jetpack but without the Extra Baggage <a href="http://www.labnol.org/internet/jetpack-related-posts/28887/">http://www.labnol.org/internet/jetpack-related-posts/28887/</a|
||
| We have a problem with promises <a href="http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html">http://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html</a|
| https://www.competethemes.com/wordpress-resources|
| How far should an <a class="zem_slink" title="Electric car" href="http://en.wikipedia.org/wiki/Electric_car" target="_blank" rel="wikipedia">electric car</a> be able to go before it breaks?

With no exhaust, pistons, belts, starter motor and no carabetta to go wrong, how far will electric cars be able to go without breaking down?

Yes you can still get a flat battery! The new <a href="http://www.telegraph.co.uk/motoring/news/7879096/Electric-Range-Rover-to-go-into-production.html" target="_blank">e-range rover's</a> battery is rated for 300,000 miles - that's over 12 times round the world.

If they last twice as long as a standard car that will be a big win for green credentials (possibly more than electric versus oil). Here's a Tesla owner with <a href="http://www.plugincars.com/100000-miles-leaf-just-beginning-evs-129112.html" target="_blank">300,000km on the clock</a>. Indeed they <a href="http://venturebeat.com/2014/08/16/tesla-extends-warranty-on-model-s-because-electric-cars-are-fundamentally-more-reliable/">now have an 8 year warranty</a> (and ∞ mileage) - they're bullish on reliability.

&nbsp; |
| The best bits that I've come across in my WordPress journey...

&nbsp;

https://www.competethemes.com/wordpress-resources|
| http://ariya.ofilabs.com/2014/01/a-maturity-model-for-build-automation.html|
| How far should an electric car be able to go before it breaks?

With no exhaust and no carabetta to go wrong, how far will electric cars be able to go without breaking down?

If they last twice as long as a standard car that will be a big win for green credentials (possibly more than electric versus oil|
|
&nbsp;
&nbsp; |
| http://ariya.ofilabs.com/2014/01/a-maturity-model-for-build-automation.html                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |
| What's your personal definition of done?

Definition of Done and KanBan are kindred spirits|
| When you start a new machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h2>Libraries to consider</h2>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
|
| What's your personal definition of done?

Definition of Done and KanBan are kindred spirits|
| It's no secret that the user interface belongs to HTML. Sure WPF and TCL/TK will still be around, but with zero deployment, HTML interfaces are going to dominate far more than they do today. (With <a href="http://phonegap.com/" target="_blank">PhoneGap</a> even native HTML apps are possible).

While there's lots of talk on ES6 and ES7, for me the biggest changes to the web development stack lie with the major browsers implementing the <a href="http://webcomponents.org" target="_blank">Web Components</a> quartet|
| <a href="http://facebook.github.io/immutable-js/">http://facebook.github.io/immutable-js/</a|
| <a href="http://facebook.github.io/react/">http://facebook.github.io/react/</a|
| <a href="http://facebook.github.io/react/">http://facebook.github.io/react/</a|
| These New Greaseless Bearings Can Spin Virtually Forever <a href="http://www.popularmechanics.com/technology/gear/a15603/super-efficient-greaseless-bearings/">http://www.popularmechanics.com/technology/gear/a15603/super-efficient-greaseless-bearings/</a|
| Wallaby.js for Visual Studio <a href="http://dm.gl/2015/05/18/wallaby-for-visual-studio/">http://dm.gl/2015/05/18/wallaby-for-visual-studio/</a|
| <a href="http://blog.red-gate.com/database-unit-testing-wrong/">http://blog.red-gate.com/database-unit-testing-wrong/</a|
| <a href="http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/">http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/</a|
| <a href="http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/">http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/</a|
||
||
||
|

</ol> |
||
| With cash being an expensive thing to handle (bank cash handling charges keep going up) people are rapidly moving to a cashless society.

A cashless society needs a way to anonymously transfer money.

Absolute power corrups absolutely. In a world where newspapers and villans want to see your data more than governments it's a last line of defence if you want a little privacy.

Those who would give up a little privacy for a bit more liberty will gain neither but loos both.

For now there's clear legitimate reasons why bitcoin is essential.

For ways to make yourself safe online in 10 steps click top right 'change'

See also: The First Battle In The Mobile Payments War Is Over <a href="http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/">http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/</a>                                                                                                                                                             |
| With cash being an expensive thing to handle (bank cash handling charges keep going up) people are rapidly moving to a cashless society.

A cashless society needs a way to anonymously transfer money.

Absolute power corrups absolutely. In a world where newspapers and villans want to see your data more than governments it's a last line of defence if you want a little privacy.

Those who would give up a little privacy for a bit more liberty will gain neither but loos both.

For now there's clear legitimate reasons why bitcoin is essential.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
| The best bits that I've come across in my WordPress journey...

&nbsp;

If you don't have time to learn Adobe Illustrator, this is a much easier choice:

https://www.canva.com/

https://www.competethemes.com/wordpress-resources|
| <h2>Power news that sparked my interest...</h2>

<h4>Home Batteries</h4>

While the new <a href="http://www.theverge.com/2015/5/6/8561461/when-will-teslas-home-battery-make-financial-sense" target="_blank">Tesla home battery</a> is a neat package ideally just using your electric car(s) as a house battery would make more sense.

<h4>Vertical Bladeless Wind Turbines</h4>

One invention that's starting to make waves on the power generation side is <a href="http://cleantechnica.com/2015/05/01/new-whirlwind-attracting-bladeless-micro-wind-turbine-gets-harvard-cred/" target="_blank">bladeless wind turbines</a>. With few moving parts, less noise, happier birds and packed denser than traditional wind farms they certainly seem to have a lot going for them. Let's see if they can productionise them...

&nbsp;

(Disclosure: I am long clean energy.)

&nbsp;

&nbsp;                                                                                                                                                                 |
| <h2>Power news that sparked my interest...</h2>

<h4>Magnets</h4>

Magnets and electricity go hand in hand - without the electric motor where would we be? The university of Maryland has just discovered a <a href="http://umdrightnow.umd.edu/news/expanding-magnets-have-potential-energize-world" target="_blank">whole different type of magnetism</a>.

<h4>Home Batteries</h4>

While the new <a href="http://www.theverge.com/2015/5/6/8561461/when-will-teslas-home-battery-make-financial-sense" target="_blank">Tesla home battery</a> is a neat package ideally just using your electric car(s) as a house battery would make more sense.

<h4>Vertical Bladeless Wind Turbines</h4>

One invention that's starting to make waves on the power generation side is <a href="http://cleantechnica.com/2015/05/01/new-whirlwind-attracting-bladeless-micro-wind-turbine-gets-harvard-cred/" target="_blank">bladeless wind turbines</a>. With few moving parts, less noise, happier birds and packed denser than traditional wind farms they certainly seem to have a lot going for them. Let's see if they can productionise them...

&nbsp;

(Disclosure: I am long clean energy.)

&nbsp;

&nbsp; |
| <h2>Power news that sparked my interest...</h2>

<h4>Magnets</h4>

Magnets and electricity go hand in hand - without the electric motor where would we be? The University of Maryland has just discovered a <a href="http://umdrightnow.umd.edu/news/expanding-magnets-have-potential-energize-world" target="_blank">whole different type of magnetism</a>.

<h4>Home Batteries</h4>

While the new <a href="http://www.theverge.com/2015/5/6/8561461/when-will-teslas-home-battery-make-financial-sense" target="_blank">Tesla home battery</a> is a neat package ideally just using your electric car(s) as a house battery would make more sense.

<h4>Vertical Bladeless Wind Turbines</h4>

One invention that's starting to make waves on the power generation side is <a href="http://cleantechnica.com/2015/05/01/new-whirlwind-attracting-bladeless-micro-wind-turbine-gets-harvard-cred/" target="_blank">bladeless wind turbines</a>. With few moving parts, less noise, happier birds and packed denser than traditional wind farms they certainly seem to have a lot going for them. Let's see if they can productionise them...

&nbsp;

(Disclosure: I am long clean energy.)

&nbsp;

&nbsp; |
| <h2>Powerfull news...</h2>

<h4>Magnets</h4>

Magnets and electricity go hand in hand - without the electric motor where would we be? The University of Maryland has just discovered a <a href="http://umdrightnow.umd.edu/news/expanding-magnets-have-potential-energize-world" target="_blank">whole different type of magnetism</a>.

<h4>Home Batteries</h4>

While the new <a href="http://www.theverge.com/2015/5/6/8561461/when-will-teslas-home-battery-make-financial-sense" target="_blank">Tesla home battery</a> is a neat package ideally just using your electric car(s) as a house battery would make more sense.

<h4>Vertical Bladeless Wind Turbines</h4>

One invention that's starting to make waves on the power generation side is <a href="http://cleantechnica.com/2015/05/01/new-whirlwind-attracting-bladeless-micro-wind-turbine-gets-harvard-cred/" target="_blank">bladeless wind turbines</a>. With few moving parts, less noise, happier birds and packed denser than traditional wind farms they certainly seem to have a lot going for them. Let's see if they can productionise them...

&nbsp;

(Disclosure: I am long clean energy.)

&nbsp;

&nbsp; |
| Microsoft Forks Node.js to Support ARM <a href="http://www.infoq.com/news/2015/05/nodejs-arm">http://www.infoq.com/news/2015/05/nodejs-arm</a|
| Microsoft Forks Node.js to Support ARM <a href="http://www.infoq.com/news/2015/05/nodejs-arm">http://www.infoq.com/news/2015/05/nodejs-arm</a|
| <a href="http://highscalability.com/numbers-everyone-should-know">http://highscalability.com/numbers-everyone-should-know</a|
||
| The best bits that I've come across in my WordPress journey...

Public domain Images:

<a href="http://unspash.com/">http://unspash.com/</a> , <a href="http://nos.twnsnd.co/" target="_blank">http://nos.twnsnd.co/</a> , <a href="https://stocksnap.io/" target="_blank">https://stocksnap.io/</a> , <a href="http://www.lifeofpix.com/" target="_blank">http://www.lifeofpix.com/</a>

If you don't have time to learn Adobe Illustrator, this is a much easier choice:

https://www.canva.com/

https://www.competethemes.com/wordpress-resources|
| De-Quasimodo Yourself: 6 Exercises to Counteract Slouching <a href="http://www.artofmanliness.com/2015/05/19/hunched-back-exercises/">http://www.artofmanliness.com/2015/05/19/hunched-back-exercises/</a|
| Convert Any Server to a Docker Container <a href="https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/">https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/</a|
| Convert Any Server to a Docker Container <a href="https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/">https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/</a|
| WebComponents.org|
| http://www.artima.com/intv/fixitP.html

Single branch|
| It's no secret that the user interface belongs to HTML. Sure WPF and TCL/TK will still be around, but with zero deployment, HTML interfaces are going to dominate far more than they do today. (With <a href="http://phonegap.com/" target="_blank">PhoneGap</a> even native HTML apps are possible).

&nbsp;

&nbsp;

WebComponents.org
| http://www.artima.com/intv/fixitP.html

Single branch|
| More Energy Efficient than Breathing <a href="http://techblog.netflix.com/2015/05/netflix-streaming-more-energy-efficient.html">http://techblog.netflix.com/2015/05/netflix-streaming-more-energy-efficient.html</a>
&nbsp; |
| The First Battle In The Mobile Payments War Is Over <a href="http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/">http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/</a|
| The First Battle In The Mobile Payments War Is Over <a href="http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/">http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/</a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |
||
||
| The First Battle In The Mobile Payments War Is Over <a href="http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/">http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/</a|
| More Energy Efficient than Breathing <a href="http://techblog.netflix.com/2015/05/netflix-streaming-more-energy-efficient.html">http://techblog.netflix.com/2015/05/netflix-streaming-more-energy-efficient.html</a|
||
| Don't get savaged by your choice of logging library.

I feel a little pang of guilt calling out Log4Net specifically as this applies to NLog and all the other .net logging frameworks out there.

But I'm not going to feel too guilty given the vast amount of time and trouble that different Log4net versions have caused me over the years.

<h3>When to use a logging framework</h3>

Log4Net, NLog and other logging frameworks are fair game to use if you are the end user. If you're developing a UI or a website or you're writing a service then knock yourself out.

But even as you do so there's no harm in using framework logging and redirecting that framework logging into your favourite log distribution  / persistence framework.

<h3>When to use framework logging<a href="http://gilescope.ninja/wp-content/uploads/2015/06/UseTRACE.png"><img class="alignright wp-image-339 size-full" src="http://gilescope.ninja/wp-content/uploads/2015/06/UseTRACE.png" alt="Use System Diagnostics Trace  to feed Log4Net" width="160" height="600" /></a></h3>

If you're writing a component that other people will (or might) use then you want to minimise the dependencies you use to avoid version conflicts. For high profile common libraries like logging frameworks you can almost guarantee that with a few different teams using your component several of them will also be using the same one. Pain ensues which can be massaged with assembly binding redirects (or recompiling your logging framework under a different name and having the clients write a log4netTolog4net adaptor - seriously don't do this!).

Instead recall that the whole .net framework logs vast quantities of data to the system diagnostics tracing framework already.

<ul>
    <li>You'll find it's more than fast enough for your usage (you may even encounter new race conditions should you switch to using it as it seems to block less than log4net).</li>
    <li>You'll be shipping one less dll</li>
    <li>No chance of clashing with another logging framework (They all can redirect the native tracing).</li>
</ul>

Nay sayers will say you can't hierarchical listen with tracing, but direct these nay sayers <a href="https://github.com/clariuslabs/NuTracer/wiki/Hierarchical-Tracing" target="_blank">here</a>.

<h3>Recap:</h3>

There's no reason not to use System Diagnostics Tracing - with no drawbacks it should be your go to logger.

(Sorry couldn't resist pointing out that all the logs belong to Splunk (or ELK).) |
| Don't get savaged by your choice of logging library.

I feel a little pang of guilt calling out Log4Net specifically as this applies to NLog and all the other .net logging frameworks out there.

But I'm not going to feel too guilty given the vast amount of time and trouble that different Log4net versions have caused me over the years.

<h3>When to use a logging framework</h3>

Log4Net, NLog and other logging frameworks are fair game to use if you are the end user. If you're developing a UI or a website or you're writing a service then knock yourself out.

But even as you do so there's no harm in using framework logging and redirecting that framework logging into your favourite log distribution  / persistence framework.

<h3>When to use framework logging<a href="http://gilescope.ninja/wp-content/uploads/2015/06/UseTRACE.png"><img class="alignright wp-image-339 size-full" src="http://gilescope.ninja/wp-content/uploads/2015/06/UseTRACE.png" alt="Use System Diagnostics Trace  to feed Log4Net" width="160" height="600" /></a></h3>

If you're writing a component that other people will (or might) use then you want to minimise the dependencies you use to avoid version conflicts. For high profile common libraries like logging frameworks you can almost guarantee that with a few different teams using your component several of them will also be using the same one. Pain ensues which can be massaged with assembly binding redirects (or recompiling your logging framework under a different name and having the clients write a log4netTolog4net adaptor - seriously don't do this!).

Instead recall that the whole .net framework logs vast quantities of data to the system diagnostics tracing framework already.

<ul>
    <li>You'll find it's more than fast enough for your usage (you may even encounter new race conditions should you switch to using it as it seems to block less than log4net).</li>
    <li>You'll be shipping one less dll</li>
    <li>No chance of clashing with another logging framework (They all can redirect the native tracing).</li>
</ul>

Nay sayers will say you can't hierarchical listen with tracing, but direct these nay sayers <a href="https://github.com/clariuslabs/NuTracer/wiki/Hierarchical-Tracing" target="_blank">here</a>.

<h3>Recap:</h3>

There's no reason not to use System Diagnostics Tracing - with no drawbacks it should be your go to logger.

(Sorry couldn't resist pointing out that all the logs belong to Splunk (or ELK).) |
| Don't get savaged by your choice of logging library.

I feel a little pang of guilt calling out Log4Net specifically as this applies to NLog and all the other .net logging frameworks out there.

But I'm not going to feel too guilty given the vast amount of time and trouble that different Log4net versions have caused me over the years.

<h3>When to use a logging framework</h3>

Log4Net, NLog and other logging frameworks are fair game to use if you are the end user. If you're developing a UI or a website or you're writing a service then knock yourself out.

But even as you do so there's no harm in using framework logging and redirecting that framework logging into your favourite log distribution  / persistence framework.

<h3>When to use framework logging<a href="http://gilescope.ninja/wp-content/uploads/2015/06/UseTRACE.png"><img class="alignright wp-image-339 size-full" src="http://gilescope.ninja/wp-content/uploads/2015/06/UseTRACE.png" alt="Use System Diagnostics Trace  to feed Log4Net" width="160" height="600" /></a></h3>

If you're writing a component that other people will (or might) use then you want to minimise the dependencies you use to avoid version conflicts. For high profile common libraries like logging frameworks you can almost guarantee that with a few different teams using your component several of them will also be using the same one. Pain ensues which can be massaged with assembly binding redirects (or recompiling your logging framework under a different name and having the clients write a log4netTolog4net adaptor - seriously don't do this!).

Instead recall that the whole .net framework logs vast quantities of data to the system diagnostics tracing framework already.

<ul>
    <li>You'll find it's more than fast enough for your usage (you may even encounter new race conditions should you switch to using it as it seems to block less than log4net).</li>
    <li>You'll be shipping one less dll</li>
    <li>No chance of clashing with another logging framework (They all can redirect the native tracing).</li>
</ul>

Nay sayers will say you can't hierarchical listen with tracing, but direct these nay sayers <a href="https://github.com/clariuslabs/NuTracer/wiki/Hierarchical-Tracing" target="_blank">here</a>.

<h3>Recap:</h3>

There's no reason not to use System Diagnostics Tracing - with no drawbacks it should be your go to logger.

(Sorry couldn't resist pointing out that all the logs belong to Splunk (or ELK).) |
| I can't dictate what&nbsp;a beautiful test looks like, there are too many of them. But they all have several attributes in common:

<ul>
    <li>They're Quick</li>
    <li>They are repeatable</li>
    <li>They aren't flakey.</li>
    <li>They don't have side effects&nbsp;</li>
    <li>Works on someone else's machine.</li>
</ul>

Now rather than assume people are going to write awesome tests, how about we set ourselves up for success by having an environment where only tests that meet the above criteria ever pass?

<h3>How to</h3>

<ol>
<li>We can run the tests from Jenkins / TeamCity to prove that it<strong> works on someone else's machine</strong>.</p></li>
<li><p>To help make the tests quick before running the tests, we can turn off the network:</p></li>
</ol>

<p>For example on Windows (if your admin) this should do the trick:

<code>wmic path win32_networkadapter where NetConnectionID="Local Area Connection" call disable &lt;&lt; run tests &gt;&gt;
wmic path win32_networkadapter where NetConnectionID="Local Area Connection" call enable</code>

This would ensure that it wasn't using non-local databases or web-services.

<ol>
<li>I'm not sure if we can set NUnit to do this by default, but we can add the attribute [<span class="typ">Maxtime</span><span class="pun">(1</span><span class="lit">000</span><span class="pun">)] to the test to cancel it and mark as a failure if it takes too long. (It would be good to be able to automatically categorise slow running tests! - google do this, so should we! A slow test should be sent to 'test purgatory'.)</span></li>
</ol>

<h3>Oh, the fun we could have!</h3>

With NUnit 3 there's the ability to run tests in parallel. It's well overdue functionality. But I want to take a different direction.

&nbsp;

Just how much can we squeeze out of one test?

<ul>
    <li>We can run it multiple times to detect memory leaks.</li>
    <li>We can run multiple times to check caching works.</li>
    <li>We can run the same test concurrently to detect race conditions.</li>
</ul>

(I feel at the moment we still live in a land where tests are imperative - gurkin needed.) |
| I can't dictate what a beautiful test looks like, there are too many of them. But they all have several attributes in common:

<ul>
    <li>They're Quick</li>
    <li>They are repeatable</li>
    <li>They aren't flakey.</li>
    <li>They don't change state.</li>
    <li>Works on someone else's machine.</li>
</ul>

Now rather than assume people are going to write awesome tests, how about we set ourselves up for success by having an environment where only tests that meet the above criteria ever pass?

<h3>How to</h3>

<ol>
<li>We can run the tests from Jenkins / TeamCity to prove that it<strong> works on someone else's machine</strong>.</p></li>
<li><p>To help make the tests quick before running the tests, we can turn off the network:</p></li>
</ol>

<p>For example on Windows (if your admin) this should do the trick:

<code>wmic path win32_networkadapter where NetConnectionID="Local Area Connection" call disable &lt;&lt; run tests &gt;&gt;
wmic path win32_networkadapter where NetConnectionID="Local Area Connection" call enable

This would ensure that it wasn't using non-local databases or web-services.</code>

<ol>
<li>I'm not sure if we can set NUnit to do this by default, but we can add the attribute [<span class="typ">Maxtime</span><span class="pun">(1</span><span class="lit">000</span><span class="pun">)] to the test to cancel it and mark as a failure if it takes too long.</span></li>
</ol>

&nbsp;

&nbsp; |
| There's something in the air this year, first it was node.js 4 io.js and now Docker have made friends with CoreOS. The announcement of the open container foundation presents a way for everyone to play together and avoid the vendor lock-in that was the instigator of all this in the first place.

Read more about the <a href="http://blog.docker.com/2015/06/open-container-project-foundation/" target="_blank">open container foundation</a>.

<h3>Tell me again why any of this matters?</h3>

Why is it important to me? Far more than just an image format, the speed of it due to caching of the layers and the start up times mean that for once we can do micro end-to-end testing. I've always argued for building a testbase that is grounded in the business problem rather than in implementation details. What we're aiming for is trying to test as much of the hooked up end-to-end system as possible quickly. There are naysayers (google) that say end-to-end testing is broken, and if it's slow and brittle then I'd agree. But by being able to spin up quickly our ecosystem as a set of interacting docker containers I think we may just be able to have our cake and eat it. And by keeping the tests grounded in the business space, a broken test really means something to someone. It's not an arbitrary broken test that may or may not be worth investigating, it's a bonefide business use case that is broken - that's one you can have a discussion about with everyone, not just the developers.

If it's not possible to specify the business functionality that you'd like to see in code, then you've got bigger problems.

In many ways I'm arguing for the <a href="https://en.wikipedia.org/wiki/Behavior-driven_development" target="_blank">BDD</a> given / when / then style (as this avoids the implementation being in the test), but really focusing on the top layer of the onion. By focusing on that layer you're testing a cohesive system which should have few dependencies.

<h3>Getting started</h3>

Find out more at <a href="https://www.docker.com/whatisdocker" target="_blank">Docker</a>.

See also: Convert Any Server to a Docker Container <a href="https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/">https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/</a>

<h3>Security</h3>

With Docker, like everything else being more secure requires having less attack surface area. <a href="https://news.ycombinator.com/item?id=10998667">Docker are now moving to a Linux distoro that fits into 5MB</a>. As you can imagine there's a lot less that an attacker can use in an OS image that small! A company called Iron.Io are leading this with <a href="https://github.com/iron-io/dockers">images</a> for most languages.

If that's not enough security / simplicity, then the final leap is to merge kernel mode and user mode - i.e. run the operating system merged with the program. This is called a 'unikernel'. (Quite a few of the unikernel guys are working for Docker so expect more to come on this front!) |
| Convert Any Server to a Docker Container <a href="https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/">https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/</a|
| And the sky is grey.

Even startups don't have green fields.

The REST of the world is out there and as a business you have to integrate with it. At a minimum startups need systems that talk to tax authorities.

As we move to a microservices landscape with companies focusing on doing one thing and doing it well (SRP pattern) we find that there's lots of pre existing systems to talk to if you want to save time and not reinvent the wheel (this helps your business concentrate on adding value and outsource the rest - SRP again ).

Think of this as scrap heap challenge but with services not software.

Next time you get tempted by a green field project remember it's not and never will be green again. Goodbye first generation computing!

(welcome to the land of innovation rather than invention)                                                                                                                                                                                                                                   |
| And the sky is grey.

Even startups don't have green fields.

The REST of the world is out there and as a business you have to integrate with it. At a minimum startups need systems that talk to tax authorities.

As we move to a microservices landscape with companies focusing on doing one thing and doing it well (SRP pattern) we find that there's lots of pre existing systems to talk to if you want to save time and not reinvent the wheel (this helps your business as you should concentrate on what you are good at and outsource the rest SRP again ).

Think of this as scrap heap challenge but with services not software.

Next time you get tempted by a green field project remember it's not and never will be green again. Goodbye first generation computing!

(wellcome to the land of innovation rather than invention)                                                                                                                                                                                                              |
| <a href="http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/">http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/</a|
| <a href="http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/">http://www.cleoconference.org/home/news-and-press/cleo-press-releases/no-hogwarts-invitation-required-invisibility-cloak/</a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
| And the sky is grey.

Even startups don't have green fields.

The REST of the world is out there and as a business you have to integrate with it. At a minimum startups need systems that talk to tax authorities.

As we move to a microservices landscape with companies focusing on doing one thing and doing it well (SRP pattern) we find that there's lots of pre existing systems to talk to if you want to save time and not reinvent the wheel (this helps your business concentrate on adding value and outsource the rest - SRP again ).

Think of this as scrap heap challenge but with services not software.

Next time you get tempted by a green field project remember it's not and never will be green again. Goodbye first generation computing!

(welcome to the land of innovation rather than invention)                                                                                                                                                                                                                                   |
| Deployment is a subject dear to anyone's heart who's current deployment system is sub-optimal. Safe rapid deployment is at the heart of the dev-ops movement.

<h3>Spec</h3>

What do we want out of a good deployment system?

<ul>
    <li>One click (partial) Rollback</li>
    <li>Speed (if it's too slow this can affect rollback)</li>
    <li>Consistency (and ideally monitoring of that consistency)</li>
    <li>Hands free automation - people shouldn't need to log into boxes.</li>
    <li>Promotion of releases from one environment to another.</li>
</ul>

In many ways we want to consider managing environments as a whole, rather than concerning ourselves with the implementation of the individual machines.

<h3>Windows Implementations</h3>

I focus on windows here as it seems a harder problem to solve. Linux seems to have apt-get package management systems that coupled with Puppet or some other newer deployment system seem to manage most of the above.

For Windows the landscape is changing rapidly. It started with <a href="http://nget.org" target="_blank">NuGet</a> which is a dll dependency fetcher for .Net, but which has now been used as a distribution mechanism by <a title="Install system for Windows" href="https://chocolatey.org/" target="_blank">Chocolatey</a>.  This then gives us a package manager for Windows, with dependencies thrown in.

It's good, but it's not enough to install MSIs, we have to ensure the other bits like setting up shares, configuring firewalls and the like are also done if we're going to truely have one click deployment.

<h4>Enter stage left, Powershell DSC.</h4>

Powershell is a puppet-esk declarative config for specifying how a machine should be configured (think /etc for windows).  It can install Chocolatey packages and configure the other bits and pieces.

The down side: It's lacking a UI / website, which means the barrier for entry is still a bit high. On the plus side it looks like this will be the de-facto way of configuring windows, with hundreds of DSC modules coming out (wave after wave of them).

There are other alternatives, CA's Nolio and <a href="https://octopusdeploy.com" target="_blank">Octopus Deploy</a> being some that seem to be getting a reasonable amount of purchase (and Puppet can use DSC modules if you're in a hybrid environment). Indeed Octopus Deploy has recently open sourced its configuration modules (which someone will make callable from Puppet &amp; DSC no doubt).

And just recently MicroSoft has announced their first steps of <a href="http://blogs.msdn.com/b/powershell/archive/2015/05/06/powershell-dsc-for-linux-is-now-available.aspx" target="_blank">Linux support for Powershell DSC</a>. Puppet really will have competition!

(Interestingly Windows getting built-in support for SSH will make things like Puppet on Windows easier to set-up - this can only be a good thing!)

<hr />

Why am I not talking about Windows Nano server and Docker in this article? It's because you need to be able to automate building an image before you deploy it across lots of servers.

You wouldn't take a build from a developers machine and put it in production, you'd take it from the CI server. It's the same here - don't put an image you can't recreate into production - it will bite back. (Let's call this the George's Marvelous Medicine principle - reproducibility is key! )

&nbsp;

Watch this space! |
| With cash being an expensive thing to handle (bank cash handling charges keep going up) people are rapidly moving to a cashless society.

A cashless society needs a way to anonymously transfer money.

Absolute power corrups absolutely. In a world where newspapers and villans want to see your data more than governments it's a last line of defence if you want a little privacy.

Those who would give up a little privacy for a bit more liberty will gain neither but loos both.

For now there's clear legitimate reasons why bitcoin is essential.

For ways to make yourself safe online in 10 steps click top right 'change'

See also: The First Battle In The Mobile Payments War Is Over <a href="http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/">http://techcrunch.com/2015/05/31/the-first-battle-in-the-mobile-payments-war-is-over/</a>                                                                                                                                                             |
| If a test is always successful does it influence us?

Delete unreliable tests

If a test is 3% flakey  (fails randomly 3 times out of 100 runs) that's bad news according to Google - if you have 10,000 tests you need them to be reliable. Quite good tests just do not cut it.

Tests cost money over their lifetime to upkeep - if the test is badly damaged and doesn't make much sense then putting it down for the sake of the rest is vital.

People are creatures of habit and get used to things. We are doomed if they / we get used to broken builds.  Half of this general malaise is due to a proliferation of branches - it's ok we fixed that test on branch x.  Branches and tests seem to have high overheads when the tests are not robust enough. Branching by abstraction rather than real branching helps here.                                                                                                                                                                                                                            |
| Too much config can kill you just as sure as none at all.

Every config switch is an if statement by another name. Branching by abstraction is a great way to be able to roll back, but it also enables the partial rollout.

To minimise risk you rollout the feature to key users,&nbsp; and then later to 80% of them. Time goes by and the moment is lost. Really you should roll out to those last 20% percent of the users that don't really need it so it's low priority. But my my is it important to do so. Without the follow through you have split your codebase into two different versions. You need to 'merge' and get back to one way of doing things.

For each config option you are carrying you are (at least) doubling the config space of your application - this leads to exponential increases in how complex your application becomes.

This all sounds a bit negative - on the upside, removing a config switch halves your complexity which can only be a good thing.

Exceptions to the rule :
If a config has only one option then it's not increasing the config space (E.g. A db connection string).

Also look out for whether you can mandate the change rather than make it configurable - sometimes not giving people a choice is good for their long term health.

(I'm not going into the database is config is code debate here. ) |
| Too much config can kill you just as sure as none at all.

Every config switch is an if statement by another name. Branching by abstraction is a great way to be able to roll back, but it also enables the partial rollout.

To minimise risk you rollout the feature to key users,&nbsp; and then later to 80% of them. Time goes by and the moment is lost. Really you should roll out to those last 20% percent of the users that don't really need it so it's low priority. But my my is it important to do so. Without the follow through you have split your codebase into two different versions. You need to 'merge' and get back to one way of doing things.                                                                                                                                                                                                                                                                                                                                                                                           |
| Too much config can kill you just as sure as none at all.

Every config switch is an if statement by another name. Branching by abstraction is a great way to be able to roll back, but it also enables the partial rollout.

To minimise risk you rollout the feature to key users,&nbsp; and then later to 80% of them. Time goes by and the moment is lost. Really you should roll out to those last 20% percent of the users that don't really need it so it's low priority. But my my is it important to do so. Without the follow through you have split your codebase into two different versions. You need to 'merge' and get back to one way of doing things.

For each config option you are carrying you are (at least) doubling the config space of your application - this leads to exponential increases in how complex your application becomes.

This all sounds a bit negative - on the upside, removing a config switch halves your complexity which can only be a good thing.

Exceptions to the rule :
If a config has only one option then it's not increasing the config space (E.g. A db connection string).

Also look out for whether you can mandate the change rather than make it configurable - sometimes not giving people a choice is good for their long term health.

(I'm not going into the database is config is code debate here. ) |
| <a href="http://www.theguardian.com/technology/2015/jun/05/fbi-anti-terror-tech-firms-encryption?CMP=twt_gu">http://www.theguardian.com/technology/2015/jun/05/fbi-anti-terror-tech-firms-encryption?CMP=twt_gu</a|
| <a href="http://www.theguardian.com/technology/2015/jun/05/fbi-anti-terror-tech-firms-encryption?CMP=twt_gu">http://www.theguardian.com/technology/2015/jun/05/fbi-anti-terror-tech-firms-encryption?CMP=twt_gu</a|
| Let's Encrypt Root and Intermediate Certificates <a href="http://lwn.net/Articles/647328/">http://lwn.net/Articles/647328/</a|
| Let's Encrypt Root and Intermediate Certificates <a href="http://lwn.net/Articles/647328/">http://lwn.net/Articles/647328/</a|
||
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available.

<h3>I have Time</h3>

If you have the luxury of being able to specify how long you think the project will take, then use relative sizing to estimate the size of the project as a whole. Think back in your career and write down a list of bigger and smaller projects. Keep going till you've pinned the rough project size. This is about as accurate as estimation gets. Doing a large detailed ground up estimate will likely be more precise, but probably will be less accurate as real life &amp; contingency will be neglected.

(While not a fan of detailed estimates, I think #NoEstimates is one estimate too few!)

&nbsp;

<ul>
    <li><label><input checked="checked" type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Permissions</label></li>
    <li><label><input checked="checked" type="checkbox" />Set up / agree repository / bug-tracking / CI</label></li>
    <li><label><input checked="checked" type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input checked="checked" type="checkbox" />Create Test plan: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input checked="checked" type="checkbox" />Commission Environment</label></li>
    <li><label><input checked="checked" type="checkbox" />Development</label></li>
    <li><label><input checked="checked" type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
    <li><label><input checked="checked" type="checkbox" />QA</label></li>
    <li><label><input checked="checked" type="checkbox" />Performance / Scalability testing.</label></li>
    <li><label><input checked="checked" type="checkbox" />UAT</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input checked="checked" type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input checked="checked" type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Production Release</label></li>
    <li><label><input checked="checked" type="checkbox" />Post Release checks and mopping up period.</label></li>
</ul>

(Work in progress!)

<table id="table">
<tbody>
<tr>
<td>Task</td>
<td>Duration (days)</td>
</tr>
</tbody>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done.

<h2>But that's not engineering!</h2>

Unless you're manufacturing software (think 99$ websites) you've probably not done anything quite like this project before. There's a large element of research and development required to deliver a system / product.

<table>
<tbody>
<tr>
<td>Project</td>
<td>Estimated Cost</td>
<td>Actual Cost</td>
</tr>
<tr>
<td>Building of Scottish Parliament</td>
<td>£40m</td>
<td>£195m</td>
</tr>
<tr>
<td>Millenium Dome</td>
<td>£399m</td>
<td>£800m</td>
</tr>
<tr>
<td>Millau Bridge</td>
<td>$1Bn</td>
<td>$520M</td>
</tr>
<tr>
<td>Jubilee Line Extension</td>
<td>£2.1Bn</td>
<td>£3.5Bn</td>
</tr>
<tr>
<td>2 Aircraft Carriers</td>
<td>£3.9Bn</td>
<td>£6.2Bn (so far)</td>
</tr>
<tr>
<td>Channel Tunnel</td>
<td>£4.7Bn</td>
<td>£9.5Bn</td>
</tr>
<tr>
<td>CrossRail</td>
<td>£15.9Bn</td>
<td>??</td>
</tr>
</tbody>
</table>

Trust me, these projects had very detailed plans - you can't always get it right, but if you know how much the past cost you, you've got a good a chance of sizing the project right.

If you can relative size estimate High Speed 2, I think you'll have no trouble sizing your next project!

See also http://strategy-madlibs.herokuapp.com/ |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Commission Environment</li>
    <li>UAT</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
</ol>                                                                                                                                                                                                                                                                    |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available.

<h3>I have Time</h3>

If you have the luxury of being able to specify how long you think the project will take, then use relative sizing to estimate the size of the project as a whole. Think back in your career and write down a list of bigger and smaller projects. Keep going till you've pinned the rough project size. This is about as accurate as estimation gets. Doing a large detailed ground up estimate will likely be more precise, but probably will be less accurate as real life &amp; contingency will be neglected.

(While not a fan of detailed estimates, I think #NoEstimates is one estimate too few!)

&nbsp;

<ul>
    <li><label><input checked="checked" type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Permissions</label></li>
    <li><label><input checked="checked" type="checkbox" />Set up / agree repository / bug-tracking / CI</label></li>
    <li><label><input checked="checked" type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input checked="checked" type="checkbox" />Create Test plan: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input checked="checked" type="checkbox" />Commission Environment</label></li>
    <li><label><input checked="checked" type="checkbox" />Development</label></li>
    <li><label><input checked="checked" type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
    <li><label><input checked="checked" type="checkbox" />QA</label></li>
    <li><label><input checked="checked" type="checkbox" />Performance / Scalability testing.</label></li>
    <li><label><input checked="checked" type="checkbox" />UAT</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input checked="checked" type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input checked="checked" type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Production Release</label></li>
    <li><label><input checked="checked" type="checkbox" />Post Release checks and mopping up period.</label></li>
</ul>

(Work in progress!)

<table id="table">
<tbody>
<tr>
<td>Task</td>
<td>Duration (days)</td>
</tr>
</tbody>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done.

<h2>But that's not engineering!</h2>

Unless you're manufacturing software (think 99$ websites) you've probably not done anything quite like this project before. There's a large element of research and development required to deliver a system / product.

<table>
<tbody>
<tr>
<td>Project</td>
<td>Estimated Cost</td>
<td>Actual Cost</td>
</tr>
<tr>
<td>Building of Scottish Parliament</td>
<td>£40m</td>
<td>£195m</td>
</tr>
<tr>
<td>Millenium Dome</td>
<td>£399m</td>
<td>£800m</td>
</tr>
<tr>
<td>Millau Bridge</td>
<td>$1Bn</td>
<td>$520M</td>
</tr>
<tr>
<td>Jubilee Line Extension</td>
<td>£2.1Bn</td>
<td>£3.5Bn</td>
</tr>
<tr>
<td>2 Aircraft Carriers</td>
<td>£3.9Bn</td>
<td>£6.2Bn (so far)</td>
</tr>
<tr>
<td>Channel Tunnel</td>
<td>£4.7Bn</td>
<td>£9.5Bn</td>
</tr>
<tr>
<td>CrossRail</td>
<td>£15.9Bn</td>
<td>??</td>
</tr>
</tbody>
</table>

Trust me, these projects had very detailed plans - you can't always get it right, but if you know how much the past cost you, you've got a good a chance of sizing. Chances are you'll be closer than by using relative sizing than the detailed planners are! And if you can estimate High Speed 2, I think you'll have no trouble sizing your next project. |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li>Onboarding / Training of new staff</li>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Get worked examples to augment the spec</li>
    <li>Commission Environment</li>
    <li>Do some development
<ol>
    <li>Deployment engineering: Ensure you can deploy and install new components</li>
</ol>
</li>
    <li>QA</li>
    <li>UAT</li>
    <li>Update Documentation &amp; Wikis.</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
    <li>Post Release checks and mopping up period.</li>
</ol> |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li>Onboarding / Training of new staff</li>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Get worked examples to augment the spec</li>
    <li>Test planning: How are you going to prove it works? (tie back to an existing system?)</li>
    <li>Commission Environment</li>
    <li>Do some development
<ol>
    <li>Deployment engineering: Ensure you can deploy and install new components</li>
</ol>
</li>
    <li>QA</li>
    <li>UAT</li>
    <li>Update Documentation &amp; Wikis.</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
    <li>Post Release checks and mopping up period.</li>
</ol> |
||
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li>Onboarding / Training of new staff</li>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Get worked examples to augment the spec</li>
    <li>Test planning: How are you going to prove it works? (tie back to an existing system?)</li>
    <li>Commission Environment</li>
    <li>Do some development
<ol>
    <li>Deployment engineering: Ensure you can deploy and install new components</li>
</ol>
</li>
    <li>QA</li>
    <li>UAT</li>
    <li>Update Documentation &amp; Wikis.</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
    <li>Post Release checks and mopping up period.</li>
</ol>

(Work in progress!) |
| No Estimates versus One Estimates

Detailed Estimation is Waste.

Why do we write tests? Because we want that instant feedback that we’ve done something right, it’s a vindication that we’ve made a step in the right direction. It gives us encouragement that all is well and we should push onwards.

If only we had that kind of feedback loop when commissioning hardware, getting the permissioning scheme right or deploying software. Maybe we just aren’t writing enough tests - 'new machine works' tests, 'new team member has all the stuff they need' tests?

By using tests we’re building up, growing our software and rewarding our selves every step of the way. We can ‘see’ progress and we know our velocity.

By starting with a goal and working towards it we badly manage expectations. We’re constantly over-optimistic on how the simplest tasks can get bogged down by either the corporate environment or just annoying gotchas. By ‘estimating’ we’re forced to build in time for the gotchas and that things won’t go as smoothly as you’d like.

I don’t think detailed estimates building up to large overall estimates work. I think they’re made to work with a lot of re-planning, fiddling and contingency such that the original ‘plan’ can still be seen to be working. In reality the plan is a smoke screen for the reality that lies underneath.

From what I’ve seen of estimation, it’s a lot quicker to identify similar sized projects in the past and use relative sizing from 40,000ft. I.e. roughly High Speed Rail 2 is about equal to CrossRail and the Channel Tunnel in cost / complexity. You could spend a lot of time and effort coming up with detailed plans on these projects that would be more precise, but no more accurate. Think back to common projects you’ve done before in your company and size things relative to those - it’s faster and just as accurate as any other method.

What I’ve experienced resonates a lot with Neil Killick’s words:

http://neilkillick.com/2013/01/31/noestimates-part-1-doing-scrum-without-estimates/ |
| Before you can measure something, you first have to define it. I don't think we can quantify quality, but the best definition of quality I've ever read is the book <a href="http://www.amazon.co.uk/Zen-And-The-Motorcycle-Maintenance/dp/0099322617" target="_blank">Zen and the art of motorcycle maintenance</a> (a must read for anyone).

<h2>Code Coverage</h2>

If we can't measure quality, what can we measure? We can measure code coverage and while every measure can be gamed (for code coverage just exclude most of the code), I think there's a lot of value in seeing that number go up.

How much code coverage is enough? If you're so confident in your coverage that you don't even need to measure it then that's a great place to be.

If you do feel the need to measure it - that's ok too. I like code coverage as a metric simply because it directly rewards people for deleting code. In a corporate environment there's lots of pressures for creating more code but far fewer pressures to get rid of code. It's seen as a 'nice to have' rather than essential to running a clean ship and reducing operational risk.

Tools to use:

<ul>
    <li>JS: <a href="https://github.com/gotwarlost/istanbul" target="_blank">Istanbul</a></li>
    <li>.Net:<a href="https://github.com/OpenCover/opencover" target="_blank"> OpenCover</a></li>
    <li>Java: <a href="https://github.com/gotwarlost/istanbul" target="_blank">JCov</a></li>
</ul>

<h3>Which coverage metric to choose?</h3>

If you're going to pick one coverage metric, then 'branch coverage' rather than file or statement coverage is best. This way less branches = better coverage - i.e. not only do you get rewarded for removing dead code, but you get rewarded for always doing something rather than optionally doing something. This brings down code complexity, makes it easier to test and makes the code easier to reason with.

To report cross-platform <a href="http://www.sonarqube.org/" target="_blank">SonarQube</a> will do the trick.

<h2>Legacy Coverage</h2>

If you're starting from a legacy codebase with a dilapidated or non-existent testbase, there's little point in writing scattergun unit tests and hoping for the best. When you're renovating an area it makes sense to put tests around it (ideally before hand so you can TDD it - I know there's a lot of dependencies everywhere because it wasn't written with testing in mind (doing the right thing is rarely the easy route)).

Using an issue tracking system such as JIRA you can associate your repository changes with an issue. It would be very interesting to see the coverage percentage for the code changes associated with specific issues. This might be a fair way to set a quality gate (but positive encouragement is always more motivating than negative) - you can fail a TeamCity build if code coverage drops by more than a certain percentage but with multiple commits it's not clear who's code didn't have enough tests around them.

<h2>Targeted Coverage</h2>

Let's assume the current program 'works' (a stretch for some programs for sure, but bear with me). There's little point in writing a unit test for a class that was written five years ago and hasn't changed since (unless your NASA in which case you really <em>should</em> have been doing TDD in the first place). Ideally you should be adding tests around the areas of your codebase that have the highest rate of change (as this is where you will most likely introduce a regression).

<h5>How to:</h5>

If you're after targeting your unit tests to get the most bang for buck it's quite simple to correlate the svn logs of how often (and recently) a file was changed with how much coverage that file has.

(Incidentally the main method of the program usually ranks as one of those high changing classes with low coverage. - I'll leave you to figure out how to unit test that one).

&nbsp; |
| Should I Buy A Used Nissan Leaf (Or Another Electric Car)? Page 3 <a href="http://www.greencarreports.com/news/1098554_should-i-buy-a-used-nissan-leaf-or-another-electric-car/page-3">http://www.greencarreports.com/news/1098554_should-i-buy-a-used-nissan-leaf-or-another-electric-car/page-3</a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
| Should I Buy A Used Nissan Leaf (Or Another Electric Car)? Page 3 <a href="http://www.greencarreports.com/news/1098554_should-i-buy-a-used-nissan-leaf-or-another-electric-car/page-3">http://www.greencarreports.com/news/1098554_should-i-buy-a-used-nissan-leaf-or-another-electric-car/page-3</a|
||
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li>Onboarding / Training of new staff</li>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Get worked examples to augment the spec</li>
    <li>Test planning: How are you going to prove it works? (tie back to an existing system?)</li>
    <li>Commission Environment</li>
    <li>Do some development
<ol>
    <li>Deployment engineering: Ensure you can deploy and install new components</li>
</ol>
</li>
    <li>QA
<ol>
    <li>Performance / Scalability testing.</li>
</ol>
</li>
    <li>UAT</li>
    <li>Update Documentation &amp; Wikis.</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Security review / Setup access groups for users.</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
    <li>Post Release checks and mopping up period.</li>
</ol>

(Work in progress!) |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><input type="checkbox">Onboarding / Training of new staff</input></li>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Get worked examples to augment the spec</li>
    <li>Test planning: How are you going to prove it works? (tie back to an existing system?)</li>
    <li>Commission Environment</li>
    <li>Do some development
<ol>
    <li>Deployment engineering: Ensure you can deploy and install new components</li>
</ol>
</li>
    <li>QA
<ol>
    <li>Performance / Scalability testing.</li>
</ol>
</li>
    <li>UAT</li>
    <li>Update Documentation &amp; Wikis.</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Security review / Setup access groups for users.</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
    <li>Post Release checks and mopping up period.</li>
</ol>

(Work in progress!) |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox">Onboarding / Training of new staff</input></label></li>
    <li>Permissions</li>
    <li>Set up / agree repository / bugtracking / CI</li>
    <li>Get worked examples to augment the spec</li>
    <li>Test planning: How are you going to prove it works? (tie back to an existing system?)</li>
    <li>Commission Environment</li>
    <li>Do some development
<ol>
    <li>Deployment engineering: Ensure you can deploy and install new components</li>
</ol>
</li>
    <li>QA
<ol>
    <li>Performance / Scalability testing.</li>
</ol>
</li>
    <li>UAT</li>
    <li>Update Documentation &amp; Wikis.</li>
    <li>Update Disaster Recovery Plan</li>
    <li>Security review / Setup access groups for users.</li>
    <li>Training / Docs / Support tools for Support staff</li>
    <li>Production Release</li>
    <li>Post Release checks and mopping up period.</li>
</ol>

(Work in progress!) |
| Cornell's website can ID bird species through photos <a href="http://www.engadget.com/2015/06/07/cornell-bird-photo-id/">http://www.engadget.com/2015/06/07/cornell-bird-photo-id/</a|
| Cornell's website can ID bird species through photos <a href="http://www.engadget.com/2015/06/07/cornell-bird-photo-id/">http://www.engadget.com/2015/06/07/cornell-bird-photo-id/</a|
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox">Onboarding / Training of new staff</input></label></li>
    <li><label><input type="checkbox">Permissions</input></label></li>
    <li><label><input type="checkbox">Set up / agree repository / bugtracking / CI</input></label></li>
    <li><label><input type="checkbox">Get worked examples to augment the spec</input></label></li>
    <li><label><input type="checkbox">Test planning: How are you going to prove it works? (tie back to an existing system?)</input></label></li>
    <li><label><input type="checkbox">Commission Environment</input></label></li>
    <li><label><input type="checkbox">Do some development</input></label>
<ol>
    <li><label><input type="checkbox">Deployment engineering: Ensure you can deploy and install new components</input></label></li>
</ol>
</li>
    <li><label><input type="checkbox">QA</input></label>
<ol>
    <li><label><input type="checkbox">Performance / Scalability testing.</input></label></li>
</ol>
</li>
    <li><label><input type="checkbox">UAT</input></label></li>
    <li><label><input type="checkbox">Update Documentation &amp; Wikis.</input></label></li>
    <li><label><input type="checkbox">Update Disaster Recovery Plan</input></label></li>
    <li><label><input type="checkbox">Security review / Setup access groups for users.</input></label></li>
    <li><label><input type="checkbox">Training / Docs / Support tools for Support staff</input></label></li>
    <li><label><input type="checkbox">Production Release</input></label></li>
    <li><label><input type="checkbox">Post Release checks and mopping up period.</input></label></li>
</ol>

(Work in progress!) |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be a[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]sked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" />Permissions</label></li>
    <li><label><input type="checkbox" />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" />Commission Environment</label></li>
    <li><label><input type="checkbox" />Do some development</label>
<ol>
    <li><label><input type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />QA</label>
<ol>
    <li><label><input type="checkbox" />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />UAT</label></li>
    <li><label><input type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" />Production Release</label></li>
    <li><label><input type="checkbox" />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox] |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be a[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]sked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" />Permissions</label></li>
    <li><label><input type="checkbox" />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" />Commission Environment</label></li>
    <li><label><input type="checkbox" />Do some development</label>
<ol>
    <li><label><input type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />QA</label>
<ol>
    <li><label><input type="checkbox" />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />UAT</label></li>
    <li><label><input type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" />Production Release</label></li>
    <li><label><input type="checkbox" />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

<table id="table">
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox] |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be a[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]sked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" />Permissions</label></li>
    <li><label><input type="checkbox" />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" />Commission Environment</label></li>
    <li><label><input type="checkbox" />Do some development</label>
<ol>
    <li><label><input type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />QA</label>
<ol>
    <li><label><input type="checkbox" />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />UAT</label></li>
    <li><label><input type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" />Production Release</label></li>
    <li><label><input type="checkbox" />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

<table id="table">
<tr><td>Row 1</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox] |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" />Permissions</label></li>
    <li><label><input type="checkbox" />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" />Commission Environment</label></li>
    <li><label><input type="checkbox" />Do some development</label>
<ol>
    <li><label><input type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />QA</label>
<ol>
    <li><label><input type="checkbox" />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />UAT</label></li>
    <li><label><input type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" />Production Release</label></li>
    <li><label><input type="checkbox" />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

<table id="table">
<tr><td>Row 1</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox] |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" />Permissions</label></li>
    <li><label><input type="checkbox" />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" />Commission Environment</label></li>
    <li><label><input type="checkbox" />Do some development</label>
<ol>
    <li><label><input type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />QA</label>
<ol>
    <li><label><input type="checkbox" />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" />UAT</label></li>
    <li><label><input type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" />Production Release</label></li>
    <li><label><input type="checkbox" />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

<table id="table">
<tr><td>Task</td><td>Duration (days)</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox] |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" checked />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" checked />Permissions</label></li>
    <li><label><input type="checkbox" checked />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" checked />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" checked />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" checked />Commission Environment</label></li>
    <li><label><input type="checkbox" checked />Development</label>
<ol>
    <li><label><input type="checkbox" checked />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" checked />QA</label>
<ol>
    <li><label><input type="checkbox" checked />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" checked />UAT</label></li>
    <li><label><input type="checkbox" checked />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" checked />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" checked />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" checked />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" checked />Production Release</label></li>
    <li><label><input type="checkbox" checked />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

<table id="table">
<tr><td>Task</td><td>Duration (days)</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox] |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:

<ol>
    <li><label><input type="checkbox" checked />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" checked />Permissions</label></li>
    <li><label><input type="checkbox" checked />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" checked />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" checked />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" checked />Commission Environment</label></li>
    <li><label><input type="checkbox" checked />Development</label>
<ol>
    <li><label><input type="checkbox" checked />Deployment engineering: Ensure you can deploy and install new components</label></li>
</ol>
</li>
    <li><label><input type="checkbox" checked />QA</label>
<ol>
    <li><label><input type="checkbox" checked />Performance / Scalability testing.</label></li>
</ol>
</li>
    <li><label><input type="checkbox" checked />UAT</label></li>
    <li><label><input type="checkbox" checked />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" checked />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" checked />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" checked />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" checked />Production Release</label></li>
    <li><label><input type="checkbox" checked />Post Release checks and mopping up period.</label></li>
</ol>

(Work in progress!)

<table id="table">
<tr><td>Task</td><td>Duration (days)</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done. |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:
<bl>
    <li><label><input type="checkbox" checked />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" checked />Permissions</label></li>
    <li><label><input type="checkbox" checked />Set up / agree repository / bugtracking / CI</label></li>
    <li><label><input type="checkbox" checked />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" checked />Test planning: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" checked />Commission Environment</label></li>
    <li><label><input type="checkbox" checked />Development</label>
<bl>
    <li><label><input type="checkbox" checked />Deployment engineering: Ensure you can deploy and install new components</label></li>
</bl>
</li>
    <li><label><input type="checkbox" checked />QA</label>
<bl>
    <li><label><input type="checkbox" checked />Performance / Scalability testing.</label></li>
</bl>
</li>
    <li><label><input type="checkbox" checked />UAT</label></li>
    <li><label><input type="checkbox" checked />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" checked />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" checked />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" checked />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" checked />Production Release</label></li>
    <li><label><input type="checkbox" checked />Post Release checks and mopping up period.</label></li>
</bl>
(Work in progress!)

<table id="table">
<tr><td>Task</td><td>Duration (days)</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done. |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available:
<bl>
    <li><label><input type="checkbox" checked />Onboarding / Training of new staff</label></li>
    <li><label><input type="checkbox" checked />Permissions</label></li>
    <li><label><input type="checkbox" checked />Set up / agree repository / bug-tracking / CI</label></li>
    <li><label><input type="checkbox" checked />Get worked examples to augment the spec</label></li>
    <li><label><input type="checkbox" checked />Create Test plan: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input type="checkbox" checked />Commission Environment</label></li>
    <li><label><input type="checkbox" checked />Development</label>
<bl>
    <li><label><input type="checkbox" checked />Deployment engineering: Ensure you can deploy and install new components</label></li>
</bl>
</li>
    <li><label><input type="checkbox" checked />QA</label>
<bl>
    <li><label><input type="checkbox" checked />Performance / Scalability testing.</label></li>
</bl>
</li>
    <li><label><input type="checkbox" checked />UAT</label></li>
    <li><label><input type="checkbox" checked />Update Documentation &amp; Wikis.</label></li>
    <li><label><input type="checkbox" checked />Update Disaster Recovery Plan</label></li>
    <li><label><input type="checkbox" checked />Security review / Setup access groups for users.</label></li>
    <li><label><input type="checkbox" checked />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input type="checkbox" checked />Production Release</label></li>
    <li><label><input type="checkbox" checked />Post Release checks and mopping up period.</label></li>
</bl>
(Work in progress!)

<table id="table">
<tr><td>Task</td><td>Duration (days)</td></tr>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done. |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available.

<h3>I have Time</h3>

If you have the luxury of being able to specify how long you think the project will take, then use relative sizing to estimate the size of the project as a whole. Think back in your career and write down a list of bigger and smaller projects. Keep going till you've pinned the rough project size. This is about as accurate as estimation gets. Doing a large detailed ground up estimate will likely be more precise, but probably will be less accurate as real life &amp; contingency will be neglected.

(While not a fan of detailed estimates, I think #NoEstimates is one estimate too few!)

&nbsp;

<ul>
    <li><label><input checked="checked" type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Permissions</label></li>
    <li><label><input checked="checked" type="checkbox" />Set up / agree repository / bug-tracking / CI</label></li>
    <li><label><input checked="checked" type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input checked="checked" type="checkbox" />Create Test plan: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input checked="checked" type="checkbox" />Commission Environment</label></li>
    <li><label><input checked="checked" type="checkbox" />Development</label></li>
    <li><label><input checked="checked" type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
    <li><label><input checked="checked" type="checkbox" />QA</label></li>
    <li><label><input checked="checked" type="checkbox" />Performance / Scalability testing.</label></li>
    <li><label><input checked="checked" type="checkbox" />UAT</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input checked="checked" type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input checked="checked" type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Production Release</label></li>
    <li><label><input checked="checked" type="checkbox" />Post Release checks and mopping up period.</label></li>
</ul>

(Work in progress!)

<table id="table">
<tbody>
<tr>
<td>Task</td>
<td>Duration (days)</td>
</tr>
</tbody>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done.

<h2>But that's not engineering!</h2>

Unless you're manufacturing software (think 99$ websites) you've probably not done anything quite like this project before. So in many ways there's a large element of research and development required to deliver a system / product.

<table>
<tbody>
<tr>
<td>Project</td>
<td>Estimated Cost</td>
<td>Actual Cost</td>
</tr>
<tr>
<td>Building of Scottish Parliament</td>
<td>£40m</td>
<td>£195m</td>
</tr>
<tr>
<td>Millenium Dome</td>
<td>£399m</td>
<td>£800m</td>
</tr>
<tr>
<td>Millau Bridge</td>
<td>$1Bn</td>
<td>$520M</td>
</tr>
<tr>
<td>Jubilee Line Extension</td>
<td>£2.1Bn</td>
<td>£3.5Bn</td>
</tr>
<tr>
<td>2 Aircraft Carriers</td>
<td>£3.9Bn</td>
<td>£6.2Bn (so far)</td>
</tr>
<tr>
<td>Channel Tunnel</td>
<td>£4.7Bn</td>
<td>£9.5Bn</td>
</tr>
<tr>
<td>CrossRail</td>
<td>£15.9Bn</td>
<td>??</td>
</tr>
</tbody>
</table>

Trust me, these projects had very detailed plans - you can't always get it right, but if you know how much the past cost you, you've got as good a chance as anyone at making an educated guess on how much High Speed 2 will cost. Chances are you'll be closer than by using relative sizing than the detailed planners are! And if you can estimate High Speed 2, I think you'll have no trouble sizing your next project. |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available.

<h3>I have Time</h3>

If you have the luxury of being able to specify how long you think the project will take, then use relative sizing to estimate the size of the project as a whole. Think back in your career and write down a list of bigger and smaller projects. Keep going till you've pinned the rough project size. This is about as accurate as estimation gets. Doing a large detailed ground up estimate will likely be more precise, but probably will be less accurate as real life &amp; contingency will be neglected.

(While not a fan of detailed estimates, I think #NoEstimates is one estimate too few!)

&nbsp;

<ul>
    <li><label><input checked="checked" type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Permissions</label></li>
    <li><label><input checked="checked" type="checkbox" />Set up / agree repository / bug-tracking / CI</label></li>
    <li><label><input checked="checked" type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input checked="checked" type="checkbox" />Create Test plan: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input checked="checked" type="checkbox" />Commission Environment</label></li>
    <li><label><input checked="checked" type="checkbox" />Development</label></li>
    <li><label><input checked="checked" type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
    <li><label><input checked="checked" type="checkbox" />QA</label></li>
    <li><label><input checked="checked" type="checkbox" />Performance / Scalability testing.</label></li>
    <li><label><input checked="checked" type="checkbox" />UAT</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input checked="checked" type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input checked="checked" type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Production Release</label></li>
    <li><label><input checked="checked" type="checkbox" />Post Release checks and mopping up period.</label></li>
</ul>

(Work in progress!)

<table id="table">
<tbody>
<tr>
<td>Task</td>
<td>Duration (days)</td>
</tr>
</tbody>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done.

<h2>But that's not engineering!</h2>

Unless you're manufacturing software (think 99$ websites) you've probably not done anything quite like this project before. There's a large element of research and development required to deliver a system / product.

<table>
<tbody>
<tr>
<td>Project</td>
<td>Estimated Cost</td>
<td>Actual Cost</td>
</tr>
<tr>
<td>Building of Scottish Parliament</td>
<td>£40m</td>
<td>£195m</td>
</tr>
<tr>
<td>Millenium Dome</td>
<td>£399m</td>
<td>£800m</td>
</tr>
<tr>
<td>Millau Bridge</td>
<td>$1Bn</td>
<td>$520M</td>
</tr>
<tr>
<td>Jubilee Line Extension</td>
<td>£2.1Bn</td>
<td>£3.5Bn</td>
</tr>
<tr>
<td>2 Aircraft Carriers</td>
<td>£3.9Bn</td>
<td>£6.2Bn (so far)</td>
</tr>
<tr>
<td>Channel Tunnel</td>
<td>£4.7Bn</td>
<td>£9.5Bn</td>
</tr>
<tr>
<td>CrossRail</td>
<td>£15.9Bn</td>
<td>??</td>
</tr>
</tbody>
</table>

Trust me, these projects had very detailed plans - you can't always get it right, but if you know how much the past cost you, you've got a good a chance of sizing the project right.

If you can relative size estimate High Speed 2, I think you'll have no trouble sizing your next project! |
| Logging++

<ol>
    <li>Log with UTC time format
<ol>
    <li>distributed systems</li>
    <li>outsourcing / multi site proof</li>
</ol>
</li>
    <li>Use framework logging where possible (System.Diagnostics.Trace for .net lovers)</li>
    <li>Aggregate logs to Splunk / ELK</li>
</ol>

Log as Json

What roles can logging perform?

The different categories are:
Debugging (last resort) 
Performance / capacity / trend anomalies 
Statistical Error fixing 
Audit trail (x years)

Replay|
| Logging

<ol>
    <li>Log with UTC time format
<ol>
    <li>distributed systems</li>
    <li>outsourcing / multi site proof</li>
</ol>
</li>
    <li>Use framework logging where possible (System.Diagnostics.Trace for .net lovers)</li>
    <li>Aggregate logs to Splunk / ELK</li>
</ol|
| Logging

<ol>
    <li>Log with UTC time format
<ol>
    <li>distributed systems</li>
    <li>outsourcing / multi site proof</li>
</ol>
</li>
    <li>Use framework logging where possible (System.Diagnostics.Trace for .net lovers)</li>
    <li>Aggregate logs to Splunk / ELK</li>
</ol|
| Logging++

<ol>
    <li>Log with UTC time format
<ol>
    <li>distributed systems</li>
    <li>outsourcing / multi site proof</li>
</ol>
</li>
    <li>Use framework logging where possible (System.Diagnostics.Trace for .net lovers)</li>
    <li>Aggregate logs to Splunk / ELK</li>
</ol|
| The state of Web Components <a href="https://hacks.mozilla.org/2015/06/the-state-of-web-components/">https://hacks.mozilla.org/2015/06/the-state-of-web-components/</a|
| The state of Web Components <a href="https://hacks.mozilla.org/2015/06/the-state-of-web-components/">https://hacks.mozilla.org/2015/06/the-state-of-web-components/</a|
| Logging++

<ol>
    <li>Log with UTC time format
<ol>
    <li>distributed systems</li>
    <li>outsourcing / multi site proof</li>
</ol>
</li>
    <li>Use framework logging where possible (System.Diagnostics.Trace for .net lovers)</li>
    <li>Aggregate logs to Splunk / ELK</li>
</ol>

Log as Json

What roles can logging perform?

The different categories are:
Debugging (last resort) 
Performance / capacity / trend anomalies 
Statistical Error fixing 
Audit trail (x years)

Replay|
| Collateral Damage <a href="http://textslashplain.com/2015/06/10/collateral-damage/">http://textslashplain.com/2015/06/10/collateral-damage/</a|
| Collateral Damage <a href="http://textslashplain.com/2015/06/10/collateral-damage/">http://textslashplain.com/2015/06/10/collateral-damage/</a|
| Cornell's website can ID bird species through photos <a href="http://www.engadget.com/2015/06/07/cornell-bird-photo-id/">http://www.engadget.com/2015/06/07/cornell-bird-photo-id/</a|
| <a href="http://software-carpentry.org/blog/2015/06/why-we-cant-have-nice-things.html">http://software-carpentry.org/blog/2015/06/why-we-cant-have-nice-things.html</a|
| <a href="http://software-carpentry.org/blog/2015/06/why-we-cant-have-nice-things.html">http://software-carpentry.org/blog/2015/06/why-we-cant-have-nice-things.html</a|
| Unit testing React components without a DOM <a href="http://simonsmith.io/unit-testing-react-components-without-a-dom/">http://simonsmith.io/unit-testing-react-components-without-a-dom/</a|
| Unit testing React components without a DOM <a href="http://simonsmith.io/unit-testing-react-components-without-a-dom/">http://simonsmith.io/unit-testing-react-components-without-a-dom/</a|
| Kitematic for Windows Alpha Now Available! <a href="http://blog.docker.com/2015/06/kitematic-windows-alpha/">http://blog.docker.com/2015/06/kitematic-windows-alpha/</a|
| Kitematic for Windows Alpha Now Available! <a href="http://blog.docker.com/2015/06/kitematic-windows-alpha/">http://blog.docker.com/2015/06/kitematic-windows-alpha/</a|
| Not getting the most out of code reviews? We can fix that and add a whole lot more fun into the process...

<!--more-->

Code Reviews should be fun, they should be interactive and they should happen as part of the design as well as the implementation.

It's waste to wait till someone's done and dusted before reviewing the code (only to think there was a much easier way to do some of those things that would have meant much less code to maintain). But by then the horse has bolted and it's too late to change or even broach some of the other paths they could have taken - they're going to defend their approach to the hilt - its human nature.

<h3>Continuous code reviews</h3>

Sit down and review with the coder as he's writing the tests, bounce ideas off of each other and get to a simpler design and implementation because of that - something that neither of you would have got to individually. I believe this way of doing a continuous code review is also known as 'pair programming'.

<h3>Efficiency</h3>

Wait, 'pair programming' - we don't want to do that - we don't have the staff or time to do that. Or do we? If you're not pairing there's a significant amount of meetings going on trying to juggle the additional work in progress (WIP) because everyone's doing twice as much stuff at once. By swarming and focusing on getting things done (DoD) with pairing we're reducing the work in progress and reducing the cycle time of items getting done. Count the total hours of meetings you've got coming up in the next week and tell me there's not room for some pairing.

And anyway, where does all that time go when you're coding? Is it 100% bashing out code? Rarely, your coding day is a long line of blockers like an obstacle course. When you're coding yourself you're going to bang into more gotchas, and more importantly when you're stuck on that random inexplicable problem that doesn't make sense, with two sets of eyes and brains on the problem you're likely to find the solution (or find a completely different way to sidestep the problem) much sooner than individually. I'd argue it's this un-blocking ability that pair programmers have that makes them more productive than two (siloed) individual coders.

<h3>80:20</h3>

Pair programming doesn't mean you both have to go to the loo together, - I'm also not convinced there's a case for pair email reading. There's also bits that are clear and you're both in agreement with - you can divide and conquer those bits. But the meat, the important bits, the urgent production problems - these are crucial to be pair programmed.

You get higher quality and counter-intuitively it's cheaper.

<hr />

&nbsp;

If the boss asks, just say you're doing a code review... |
| I can't dictate what a beautiful test looks like, there are too many of them. But they all have several attributes in common:

<ul>
    <li>They're Quick</li>
    <li>They are repeatable</li>
    <li>They aren't flakey.</li>
    <li>They don't change state.</li>
    <li>Works on someone else's machine.</li>
</ul>

Now rather than assume people are going to write awesome tests, how about we set ourselves up for success by having an environment where only tests that meet the above criteria ever pass?

<h3>How to</h3>

<ol>
<li>We can run the tests from Jenkins / TeamCity to prove that it<strong> works on someone else's machine</strong>.</p></li>
<li><p>To help make the tests quick before running the tests, we can turn off the network:</p></li>
</ol>

<p>For example on Windows (if your admin) this should do the trick:

<code>wmic path win32_networkadapter where NetConnectionID="Local Area Connection" call disable &lt;&lt; run tests &gt;&gt;
wmic path win32_networkadapter where NetConnectionID="Local Area Connection" call enable</code>

This would ensure that it wasn't using non-local databases or web-services.

<ol>
<li>I'm not sure if we can set NUnit to do this by default, but we can add the attribute [<span class="typ">Maxtime</span><span class="pun">(1</span><span class="lit">000</span><span class="pun">)] to the test to cancel it and mark as a failure if it takes too long. (It would be good to be able to automatically categorise slow running tests! - google do this, so should we! A slow test should be sent to 'test purgatory'.)</span></li>
</ol>

<h3>Oh, the fun we could have!</h3>

With NUnit 3 there's the ability to run tests in parallel. It's well overdue functionality. But I want to take a different direction.

&nbsp;

Just how much can we squeeze out of one test?

<ul>
    <li>We can run it multiple times to detect memory leaks.</li>
    <li>We can run multiple times to check caching works.</li>
    <li>We can run the same test concurrently to detect race conditions.</li>
</ul>

(I feel at the moment we still live in a land where tests are imperative - gurkin needed.) |
| People laugh when I tell them that the future of the enterprise is JavaScript. I tell them it's inevitable...and with ES6 ratified we're one step closer.

<!--more-->

<h3>Performance?</h3>

They perceive JavaScript circa 1990s performance, with rough edges and a text editor as an IDE. It's a world away from the truth now, with the raw speed of <a title="asm.js - high performance javascript" href="http://asmjs.org/" target="_blank">asm.js</a> at the cutting edge, and standard JavaScript performance is 'good enough' (almost every Java hotspot technique has been ported across to the JavaScript VMs). In 90% of business cases it's not performance that's stopping JavaScript.

<blockquote>JavaScript is a platform, not just a language.</blockquote>

And it's only going to get better. Speed up Java or .Net and it helps a bit, but speed up JavaScript and you've just added a fraction onto the world's GDP. There's far more money backing speeding up JavaScript than anything else. (Remember JavaScript is a platform, not just a language.)

<blockquote>Check out the new <a href="https://brendaneich.com/2015/06/from-asm-js-to-webassembly/" target="_blank">WebAssemby movement</a> (backed by all the right people) we might have a way to gradually migrate towards Javascript as a Platform.</blockquote>

<h3>JS @ Front</h3>

The days of fat clients and WinForms/WPF are largely over. There's little justification for not going HTML5 in a business setting. The UI I think we're all agreed is going to be HTML and JavaScript for the foreseeable future.

<h3>JS @ Back</h3>

While Java and .NET back ends (and even some C++) will be around indefinitely, they are going to have to roll over and let JavaScript take its fare share of the bed. It started with Node.JS getting the ball rolling, but I'm sure there will be many other server side JavaScript platforms (it's great to see <a href="https://iojs.org/en/index.html" target="_blank">io.js</a> is going to merge back with node.js soon). We hope they will learn from the lessons and pain Java went through with J2EE.

<h3>Tooling</h3>

The days of textpad are numbered. JavaScript has almost as good IDEs as the static languages have thanks to Chrome's developer tools and JetBrain's excellent WebStorm. Add in a little <a title="Karma test runner" href="http://karma-runner.github.io/0.8/config/coverage.html" target="_blank">Karma</a> and you've got a TDD platform that's arguably better than today's C# can manage.

And it's only going to get better.

<h3>The Future</h3>

JavaScript's not a static language, it's dynamic and evolving at a good pace. One thing that's clear to me is that the future is <a title="Strong typing in a dynamic world" href="http://definitelytyped.org/" target="_blank">definitely typed</a> - with ES6 approved, the next big leap for the language in ES7 is giving people the option to type. FaceBook, Google and Microsoft are all rallying around definitely typed as a standard, and with those backers I wouldn't want to bet against it.

<ul>
    <li>A look into <a href="https://hacks.mozilla.org/2015/05/es6-in-depth-template-strings-2/" target="_blank">ES6 string templating</a></li>
    <li>For now you'll still have to <a href="https://babeljs.io/" target="_blank">transpile</a> to ES5 until there's <a href="https://kangax.github.io/compat-table/es6/" target="_blank">browser support</a>.</li>
</ul>

<h3>Round up</h3>

All this JavaScript on the server - is it such a bad thing? Having one language on the client and server is an advantage. But it doesn't stop there, JavaScript's async nature means that it's tilted in the direction of large parallel processing, and at its heart it's a functional language (though a far cry from Haskall) with not too many bells and whistles.

Whether you think it's a great or a terrible idea, as sure as eggs is eggs we're going to see a whole lot of JavaScript on the server. So while some of you might not like the idea, it's time to get used to it.

I for one welcome our new overlord. Given EJS is inevitable, are you happy or sad that the world has come to this?

<pre><code>[thumbs-rating-buttons]</code></pre> |
| There's a great free e-book on how git works (<a title="Pro Git" href="http://git-scm.com/book/en/v2">Pro-Git</a>). For me the biggest take-away was the beauty of storing data by it's hashcode (SHA256 in git's case).

If you can exclude mutable things like the filename and timestamps, then when you have multiple copies of the same file (or chunk of data) you'll naturally save them under the same location. You could call this 'hash based compression' as the same chunk of data is never stored twice.

You'd need to reference count the pointers to this chunk of data (file) if you wanted to delete it (unless you're using a time based clean up).

<h3>Ok, so no dupe, but what about load balancing?</h3>

It turns out that the <a title="Chord" href="https://en.wikipedia.org/wiki/Chord_(peer-to-peer)">chord algorithm</a> is perfect for this (or pick any other <a title="Distributed Hash Table" href="https://en.wikipedia.org/wiki/Distributed_hash_table" target="_blank">DHT algo</a>). You can split up where you store the data and can store it n-times for redundancy.

<h3>Key Gotcha</h3>

There's still the question of how to get the hash if you don't have the original. The hash makes a perfect immutable key for the data, but you still need to map from your mutable key (filename/timestamp) to the immutable key.

The good news is you have split the problem into two distinct problems:

<ol>
    <li>Mapping from a small mutable key to a small immutable hash.</li>
    <li>Distribution of the (heavy) data.</li>
</ol>

Once you've keyed by hash you can't get the wrong / out of date contents. It is at this stage very error-proof. (And you can always verify that the data you have does indeed match the hash).

<h3>Versioning</h3>

So far, so good, but how do you have a version 1, version 2 etc of an object? If we're storing the object under its hashed address we can hash the hash (or just add one to the hash) and store the pointer there to the next hash.

&nbsp;

<h3>Other references:</h3>

<a title="Single instance storage" href="https://en.wikipedia.org/wiki/Single-instance_storage">Single Instance Storage</a> |
| There's a great free e-book on how git works (<a title="Pro Git" href="http://git-scm.com/book/en/v2">Pro-Git</a>). For me the biggest take-away was the beauty of storing data by it's hashcode (SHA256 in git's case).

If you can exclude mutable things like the filename and timestamps, then when you have multiple copies of the same file (or chunk of data) you'll naturally save them under the same location. You could call this 'hash based compression' as the same chunk of data is never stored twice.

You'd need to reference count the pointers to this chunk of data (file) if you wanted to delete it (unless you're using a time based clean up).

<h3>Ok, so no dupe, but what about load balancing?</h3>

It turns out that the <a title="Chord" href="https://en.wikipedia.org/wiki/Chord_(peer-to-peer)">chord algorithm</a> is perfect for this (or pick any other <a title="Distributed Hash Table" href="https://en.wikipedia.org/wiki/Distributed_hash_table" target="_blank">DHT algo</a>). You can split up where you store the data and can store it n-times for redundancy.

<h3>Key Gotcha</h3>

There's still the question of how to get the hash if you don't have the original. The hash makes a perfect immutable key for the data, but you still need to map from your mutable key (filename/timestamp) to the immutable key.

The good news is you have split the problem into two distinct problems:

<ol>
    <li>Mapping from a small mutable key to a small immutable hash.</li>
    <li>Distribution of the (heavy) data.</li>
</ol>

Once you've keyed by hash you can't get the wrong / out of date contents. It is at this stage very error-proof. (And you can always verify that the data you have does indeed match the hash).

<h3>Versioning</h3>

So far, so good, but how do you have a version 1, version 2 etc of an object? If we're storing the object under its hashed address we can hash the hash (or just add one to the hash) and store the pointer there to the next hash. (For a more in-depth discussion on this topic see <a href="http://joearms.github.io/2015/06/19/Mutable-Value_Chains.html" target="_blank">Mutable Value Chains</a>)

&nbsp;

<h3>Other references:</h3>

<a title="Single instance storage" href="https://en.wikipedia.org/wiki/Single-instance_storage">Single Instance Storage</a> |
| There are two streams to any development, the first, the coding stream is focused on delivering the goods; the second is the marketing stream which is focused on ensuring everyone else thinks you're going to deliver the goods.

If you're being (w)agile you're still going to be asked for and expected to deliver a top down plan that details all the development steps.

Here's our cheat-sheet to ensure you minimise waste and quickly come up with a plan to fit the time available.

<h3>I have Time</h3>

If you have the luxury of being able to specify how long you think the project will take, then use relative sizing to estimate the size of the project as a whole. Think back in your career and write down a list of bigger and smaller projects. Keep going till you've pinned the rough project size. This is about as accurate as estimation gets. Doing a large detailed ground up estimate will likely be more precise, but probably will be less accurate as real life &amp; contingency will be neglected.

(While not a fan of detailed estimates, I think #NoEstimates is one estimate too few!)

&nbsp;

<ul>
    <li><label><input checked="checked" type="checkbox" />Onboarding / Training of new staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Permissions</label></li>
    <li><label><input checked="checked" type="checkbox" />Set up / agree repository / bug-tracking / CI</label></li>
    <li><label><input checked="checked" type="checkbox" />Get worked examples to augment the spec</label></li>
    <li><label><input checked="checked" type="checkbox" />Create Test plan: How are you going to prove it works? (tie back to an existing system?)</label></li>
    <li><label><input checked="checked" type="checkbox" />Commission Environment</label></li>
    <li><label><input checked="checked" type="checkbox" />Development</label></li>
    <li><label><input checked="checked" type="checkbox" />Deployment engineering: Ensure you can deploy and install new components</label></li>
    <li><label><input checked="checked" type="checkbox" />QA</label></li>
    <li><label><input checked="checked" type="checkbox" />Performance / Scalability testing.</label></li>
    <li><label><input checked="checked" type="checkbox" />UAT</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Documentation &amp; Wikis.</label></li>
    <li><label><input checked="checked" type="checkbox" />Update Disaster Recovery Plan</label></li>
    <li><label><input checked="checked" type="checkbox" />Security review / Setup access groups for users.</label></li>
    <li><label><input checked="checked" type="checkbox" />Training / Docs / Support tools for Support staff</label></li>
    <li><label><input checked="checked" type="checkbox" />Production Release</label></li>
    <li><label><input checked="checked" type="checkbox" />Post Release checks and mopping up period.</label></li>
</ul>

(Work in progress!)

<table id="table">
<tbody>
<tr>
<td>Task</td>
<td>Duration (days)</td>
</tr>
</tbody>
</table>

&nbsp;

[cjtoolbox name='Plan-o-matic' ] [/cjtoolbox]

Paste this into the planning tool 'Excel', and you're done.

<h2>But that's not engineering!</h2>

Unless you're manufacturing software (think 99$ websites) you've probably not done anything quite like this project before. There's a large element of research and development required to deliver a system / product.

<table>
<tbody>
<tr>
<td>Project</td>
<td>Estimated Cost</td>
<td>Actual Cost</td>
</tr>
<tr>
<td>Building of Scottish Parliament</td>
<td>£40m</td>
<td>£195m</td>
</tr>
<tr>
<td>Millenium Dome</td>
<td>£399m</td>
<td>£800m</td>
</tr>
<tr>
<td>Millau Bridge</td>
<td>$1Bn</td>
<td>$520M</td>
</tr>
<tr>
<td>Jubilee Line Extension</td>
<td>£2.1Bn</td>
<td>£3.5Bn</td>
</tr>
<tr>
<td>2 Aircraft Carriers</td>
<td>£3.9Bn</td>
<td>£6.2Bn (so far)</td>
</tr>
<tr>
<td>Channel Tunnel</td>
<td>£4.7Bn</td>
<td>£9.5Bn</td>
</tr>
<tr>
<td>CrossRail</td>
<td>£15.9Bn</td>
<td>??</td>
</tr>
</tbody>
</table>

Trust me, these projects had very detailed plans - you can't always get it right, but if you know how much the past cost you, you've got a good a chance of sizing the project right.

If you can relative size estimate High Speed 2, I think you'll have no trouble sizing your next project!

See also http://strategy-madlibs.herokuapp.com/ |
| Convert Any Server to a Docker Container <a href="https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/">https://zwischenzugs.wordpress.com/2015/05/24/convert-any-server-to-a-docker-container/</a>

Docker container love in:

http://blog.docker.com/2015/06/open-container-project-foundation/                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
| The Evolution of TDD <a href="http://www.thoughtworks.com/insights/blog/evolution-of-tdd">http://www.thoughtworks.com/insights/blog/evolution-of-tdd</a|
| The Evolution of TDD <a href="http://www.thoughtworks.com/insights/blog/evolution-of-tdd">http://www.thoughtworks.com/insights/blog/evolution-of-tdd</a>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |
| Why Programming is Difficult <a href="https://joearms.github.io/2014/02/07/why-programming-is-difficult.html">https://joearms.github.io/2014/02/07/why-programming-is-difficult.html</a|
| Why Programming is Difficult <a href="https://joearms.github.io/2014/02/07/why-programming-is-difficult.html">https://joearms.github.io/2014/02/07/why-programming-is-difficult.html</a|
| Java in Flames <a href="http://techblog.netflix.com/2015/07/java-in-flames.html">http://techblog.netflix.com/2015/07/java-in-flames.html</a|
| <a href="http://blogs.msdn.com/b/lucian/archive/2015/07/27/writing-a-nuget-package-for-vs2015-rtm-and-uwp.aspx">http://blogs.msdn.com/b/lucian/archive/2015/07/27/writing-a-nuget-package-for-vs2015-rtm-and-uwp.aspx</a|
| Database versioning best practices <a href="http://enterprisecraftsmanship.com/2015/08/10/database-versioning-best-practices/">http://enterprisecraftsmanship.com/2015/08/10/database-versioning-best-practices/</a|
| TDD and Complexity <a href="https://medium.com/@davidihunt/tdd-and-complexity-1bbd5ca51ee7">https://medium.com/@davidihunt/tdd-and-complexity-1bbd5ca51ee7</a|
| Welcome to the World, Drone-Killing Laser Cannon <a href="http://www.wired.com/2015/08/welcome-world-drone-killing-laser-cannon/">http://www.wired.com/2015/08/welcome-world-drone-killing-laser-cannon/</a|
| How HTML5 APIs can fingerprint users <a href="https://network23.org/inputisevil/2015/09/06/how-html5-apis-can-fingerprint-users/">https://network23.org/inputisevil/2015/09/06/how-html5-apis-can-fingerprint-users/</a|
| How HTML5 APIs can fingerprint users <a href="https://network23.org/inputisevil/2015/09/06/how-html5-apis-can-fingerprint-users/">https://network23.org/inputisevil/2015/09/06/how-html5-apis-can-fingerprint-users/</a|
| runtime.js — JavaScript library OS

&nbsp;

versus Chrome.OS

versus Firefox.OS

or just a cash shell|
| runtime.js — JavaScript library|
|                                                                                                                                                                                                                                                                                                                                                                                                                                         |
| Why unikernels might kill containers in five years <a href="https://gigaom.com/2015/10/09/why-unikernels-will-kill-containers-in-five-years/">https://gigaom.com/2015/10/09/why-unikernels-will-kill-containers-in-five-years/</a|
| <pre><code>            &lt;a href="http://gilescope.ninja/wp-content/uploads/2015/05/wpid-20150518_1953181.jpg" target="_self" itemprop="url"&gt;
            &lt;img src="http://gilescope.ninja/wp-content/uploads/2015/05/wpid-20150518_1953181.jpg" alt="wpid-20150518_195318.jpg" itemprop="image"  /&gt;
            &lt;/a&gt;
When starting Mac OS X:
</code></pre>

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

&nbsp; |
| <a href="http://gilescope.ninja/wp-content/uploads/2015/05/wpid-20150518_1953181.jpg" target="_self">
<img src="http://gilescope.ninja/wp-content/uploads/2015/05/wpid-20150518_1953181.jpg" alt="wpid-20150518_195318.jpg" />
</a>

When starting Mac OS X:

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>


<hr />

&nbsp;

<hr />

| <pre><code>When starting Mac OS X:
</code></pre>

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

| When starting Mac OS X:

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

New project checklist:
<nl>
<li>git / svn global ignores </li>
<li>copy or create resharper team settings file for the solution </li>
</nl>

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

&nbsp;
New project checklist:
<nl>
<li>git / svn global ignores </li>
<li>copy or create resharper team settings file for the solution </li>
</nl>

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

&nbsp; |
| <pre><code>When starting Mac OS X:
</code></pre>

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>

&nbsp;
     [category-d3tree] |
| <pre><code>When starting Mac OS X:
</code></pre>

sudo visudo

<a href="http://blog.rongarret.info/2015/08/psa-beware-of-sudo-on-os-x.html">add "Defaults tty_tickets" (sudo restriction</a>)

When you start a new windows machine, don't start from scratch. Here's my baseline (<a title="Get Chocolatey!" href="https://chocolatey.org/" target="_blank">Get Chocolatey!</a>):

choco install f.lux

choco install poshgit

&nbsp;

&nbsp;

<h3>Libraries to consider</h3>

<table>
<tbody>
<tr>
<td>Name</td>
<td>Lang</td>
<td>Why</td>
</tr>
<tr>
<td><a href="https://github.com/jamietre/CsQuery">CsQuery</a></td>
<td>.net</td>
<td>Pure .net equivalent to html tidy. Supports CSS3 selectors and is a great way to scrape data from webpages.</td>
</tr>
</tbody>
</table>

&nbsp;

<h3>Useful Android Apps</h3>

<table>
<tbody>
<tr>
<td>App</td>
<td>Why?</td>
</tr>
<tr>
<td>FTP Server</td>
<td>A push button FTP server, this has to be the easiest way to get files off an android phone!</td>
</tr>
<tr>
<td></td>
<td>Just how noisy is your open plan office?</td>
</tr>
<tr>
<td></td>
<td>Motion detector. Did you really remove every last mosquito in the hall?</td>
</tr>
</tbody>
</table>
